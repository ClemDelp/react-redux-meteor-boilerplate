[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar _ = Package.underscore._;\nvar Mongo = Package.mongo.Mongo;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar ReactiveVar = Package['reactive-var'].ReactiveVar;\n\n/* Package-scope variables */\nvar Streamy;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                     //\n// packages/yuukan_streamy/packages/yuukan_streamy.js                                                  //\n//                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                       //\n(function () {                                                                                         // 1\n                                                                                                       // 2\n//////////////////////////////////////////////////////////////////////////////////////////////////     // 3\n//                                                                                              //     // 4\n// packages/yuukan:streamy/lib/namespaces.js                                                    //     // 5\n//                                                                                              //     // 6\n//////////////////////////////////////////////////////////////////////////////////////////////////     // 7\n                                                                                                //     // 8\nStreamy = {};                                                                                   // 1   // 9\nStreamy.BroadCasts = {};                                                                        // 2   // 10\nStreamy.DirectMessages = {};                                                                    // 3   // 11\n//////////////////////////////////////////////////////////////////////////////////////////////////     // 12\n                                                                                                       // 13\n}).call(this);                                                                                         // 14\n                                                                                                       // 15\n                                                                                                       // 16\n                                                                                                       // 17\n                                                                                                       // 18\n                                                                                                       // 19\n                                                                                                       // 20\n(function () {                                                                                         // 21\n                                                                                                       // 22\n//////////////////////////////////////////////////////////////////////////////////////////////////     // 23\n//                                                                                              //     // 24\n// packages/yuukan:streamy/lib/core/core.js                                                     //     // 25\n//                                                                                              //     // 26\n//////////////////////////////////////////////////////////////////////////////////////////////////     // 27\n                                                                                                //     // 28\nvar handlers = {};                                                                              // 1   // 29\nvar connect_handlers = [];                                                                      // 2   // 30\nvar disconnect_handlers = [];                                                                   // 3   // 31\n                                                                                                // 4   // 32\n// -------------------------------------------------------------------------- //                // 5   // 33\n// --------------------- Overriden by client/server ------------------------- //                // 6   // 34\n// -------------------------------------------------------------------------- //                // 7   // 35\n                                                                                                // 8   // 36\n/**                                                                                             // 9   // 37\n * Init streamy, attach base handlers in client/server                                          // 10  // 38\n */                                                                                             // 11  // 39\nStreamy.init = function() { };                                                                  // 12  // 40\n                                                                                                // 13  // 41\n/**                                                                                             // 14  // 42\n * Write the message on the socket                                                              // 15  // 43\n * @param {String} data Data stringified                                                        // 16  // 44\n * @param {Object} to (Server side) Which socket should we use                                  // 17  // 45\n */                                                                                             // 18  // 46\nStreamy._write = function(data, to) { };                                                        // 19  // 47\n                                                                                                // 20  // 48\n// -------------------------------------------------------------------------- //                // 21  // 49\n// ------------------------------ Accessors --------------------------------- //                // 22  // 50\n// -------------------------------------------------------------------------- //                // 23  // 51\n                                                                                                // 24  // 52\n/**                                                                                             // 25  // 53\n * Retrieve connect handlers                                                                    // 26  // 54\n */                                                                                             // 27  // 55\nStreamy.connectHandlers = function() {                                                          // 28  // 56\n  return connect_handlers;                                                                      // 29  // 57\n};                                                                                              // 30  // 58\n                                                                                                // 31  // 59\n/**                                                                                             // 32  // 60\n * Retrieve disconnect handlers                                                                 // 33  // 61\n */                                                                                             // 34  // 62\nStreamy.disconnectHandlers = function() {                                                       // 35  // 63\n  return disconnect_handlers;                                                                   // 36  // 64\n};                                                                                              // 37  // 65\n                                                                                                // 38  // 66\n/**                                                                                             // 39  // 67\n * Retrieve all handlers or the one for the given message                                       // 40  // 68\n * @param {String} message Optional, if defined, returns the handler for this specific messsage // 41  // 69\n */                                                                                             // 42  // 70\nStreamy.handlers = function(message) {                                                          // 43  // 71\n  if(message) {                                                                                 // 44  // 72\n    var handler = handlers[message];                                                            // 45  // 73\n    if(!handler)                                                                                // 46  // 74\n      handler = function() {};                                                                  // 47  // 75\n                                                                                                // 48  // 76\n    return handler;                                                                             // 49  // 77\n  }                                                                                             // 50  // 78\n                                                                                                // 51  // 79\n  return handlers;                                                                              // 52  // 80\n};                                                                                              // 53  // 81\n                                                                                                // 54  // 82\n// -------------------------------------------------------------------------- //                // 55  // 83\n// -------------------------- Common interface ------------------------------ //                // 56  // 84\n// -------------------------------------------------------------------------- //                // 57  // 85\n                                                                                                // 58  // 86\n/**                                                                                             // 59  // 87\n * Apply a specific prefix to avoid name conflicts                                              // 60  // 88\n * @param {String} value Base value                                                             // 61  // 89\n * @return {String} The base value prefixed                                                     // 62  // 90\n */                                                                                             // 63  // 91\nStreamy._applyPrefix = function(value) {                                                        // 64  // 92\n  return 'streamy$' + value;                                                                    // 65  // 93\n};                                                                                              // 66  // 94\n                                                                                                // 67  // 95\n/**                                                                                             // 68  // 96\n * Register an handler for the given message type                                               // 69  // 97\n * @param {String} message Message name to handle                                               // 70  // 98\n * @param {Function} callback Callback to call when this message is received                    // 71  // 99\n */                                                                                             // 72  // 100\nStreamy.on = function(message, callback) {                                                      // 73  // 101\n  message = Streamy._applyPrefix(message);                                                      // 74  // 102\n  handlers[message] = Meteor.bindEnvironment(callback);                                         // 75  // 103\n};                                                                                              // 76  // 104\n                                                                                                // 77  // 105\n/**                                                                                             // 78  // 106\n * Adds an handler for the connection success                                                   // 79  // 107\n * @param {Function} callback Callback to call upon connection                                  // 80  // 108\n */                                                                                             // 81  // 109\nStreamy.onConnect = function(callback) {                                                        // 82  // 110\n  connect_handlers.push(Meteor.bindEnvironment(callback));                                      // 83  // 111\n};                                                                                              // 84  // 112\n                                                                                                // 85  // 113\n/**                                                                                             // 86  // 114\n * Adds an handler for the disconnection                                                        // 87  // 115\n * @param {Function} callback Callback to call upon disconnect                                  // 88  // 116\n */                                                                                             // 89  // 117\nStreamy.onDisconnect = function(callback) {                                                     // 90  // 118\n  disconnect_handlers.push(Meteor.bindEnvironment(callback));                                   // 91  // 119\n};                                                                                              // 92  // 120\n                                                                                                // 93  // 121\n/**                                                                                             // 94  // 122\n * Emits a message with the given name and associated data                                      // 95  // 123\n * @param {String} message Message name to emit                                                 // 96  // 124\n * @param {Object} data Data to send                                                            // 97  // 125\n * @param {Socket} to (Server side only) which socket we should use                             // 98  // 126\n */                                                                                             // 99  // 127\nStreamy.emit = function(message, data, to) {                                                    // 100\n  data = data || {};                                                                            // 101\n  message = Streamy._applyPrefix(message);                                                      // 102\n                                                                                                // 103\n  check(message, String);                                                                       // 104\n  check(data, Object);                                                                          // 105\n                                                                                                // 106\n  data.msg = message;                                                                           // 107\n                                                                                                // 108\n  Streamy._write(JSON.stringify(data), to);                                                     // 109\n};                                                                                              // 110\n//////////////////////////////////////////////////////////////////////////////////////////////////     // 139\n                                                                                                       // 140\n}).call(this);                                                                                         // 141\n                                                                                                       // 142\n                                                                                                       // 143\n                                                                                                       // 144\n                                                                                                       // 145\n                                                                                                       // 146\n                                                                                                       // 147\n(function () {                                                                                         // 148\n                                                                                                       // 149\n//////////////////////////////////////////////////////////////////////////////////////////////////     // 150\n//                                                                                              //     // 151\n// packages/yuukan:streamy/lib/direct_messages/direct_messages.js                               //     // 152\n//                                                                                              //     // 153\n//////////////////////////////////////////////////////////////////////////////////////////////////     // 154\n                                                                                                //     // 155\n// -------------------------------------------------------------------------- //                // 1   // 156\n// --------------------- Overriden by client/server ------------------------- //                // 2   // 157\n// -------------------------------------------------------------------------- //                // 3   // 158\n                                                                                                // 4   // 159\n/**                                                                                             // 5   // 160\n * Gets the wrapper for the emit returned by Streamy.sessions(sid)                              // 6   // 161\n * @param {String|Array} sid Session id(s)                                                      // 7   // 162\n * @return  {Function}  Function which will be called by emit on the session                    // 8   // 163\n */                                                                                             // 9   // 164\nStreamy._sessionsEmit = function(sid) { };                                                      // 10  // 165\n                                                                                                // 11  // 166\n/**                                                                                             // 12  // 167\n * Gets the wrapper for the emit returned by Streamy.sessionsForUsers(sid)                      // 13  // 168\n * @param {String|Array} uid User id(s)                                                         // 14  // 169\n * @return  {Function}  Function which will be called by emit on the session                    // 15  // 170\n */                                                                                             // 16  // 171\nStreamy._sessionsForUsersEmit = function(uid) { };                                              // 17  // 172\n                                                                                                // 18  // 173\n// -------------------------------------------------------------------------- //                // 19  // 174\n// -------------------------- Common interface ------------------------------ //                // 20  // 175\n// -------------------------------------------------------------------------- //                // 21  // 176\n                                                                                                // 22  // 177\n/**                                                                                             // 23  // 178\n * Returns an object for the targetted session id(s) which contains an emit method              // 24  // 179\n * @param {String|Array} sid Session id(s)                                                      // 25  // 180\n * @return  {Object}  Object with an emit function                                              // 26  // 181\n */                                                                                             // 27  // 182\nStreamy.sessions = function(sid) {                                                              // 28  // 183\n  return {                                                                                      // 29  // 184\n    emit: Streamy._sessionsEmit(sid)                                                            // 30  // 185\n  };                                                                                            // 31  // 186\n};                                                                                              // 32  // 187\n                                                                                                // 33  // 188\n/**                                                                                             // 34  // 189\n * Returns an object for the targetted user id(s) which contains an emit method                 // 35  // 190\n * @param {String|Array} uid User id(s)                                                         // 36  // 191\n * @return  {Object}  Object with an emit function                                              // 37  // 192\n */                                                                                             // 38  // 193\nStreamy.sessionsForUsers = function(uid) {                                                      // 39  // 194\n  return {                                                                                      // 40  // 195\n    emit: Streamy._sessionsForUsersEmit(uid)                                                    // 41  // 196\n  }                                                                                             // 42  // 197\n};                                                                                              // 43  // 198\n                                                                                                // 44  // 199\n//////////////////////////////////////////////////////////////////////////////////////////////////     // 200\n                                                                                                       // 201\n}).call(this);                                                                                         // 202\n                                                                                                       // 203\n                                                                                                       // 204\n                                                                                                       // 205\n                                                                                                       // 206\n                                                                                                       // 207\n                                                                                                       // 208\n(function () {                                                                                         // 209\n                                                                                                       // 210\n//////////////////////////////////////////////////////////////////////////////////////////////////     // 211\n//                                                                                              //     // 212\n// packages/yuukan:streamy/lib/broadcasts/broadcasts.js                                         //     // 213\n//                                                                                              //     // 214\n//////////////////////////////////////////////////////////////////////////////////////////////////     // 215\n                                                                                                //     // 216\n// -------------------------------------------------------------------------- //                // 1   // 217\n// --------------------- Overriden by client/server ------------------------- //                // 2   // 218\n// -------------------------------------------------------------------------- //                // 3   // 219\n                                                                                                // 4   // 220\n/**                                                                                             // 5   // 221\n * Returns an object for the targetted session id which contains an emit method                 // 6   // 222\n * @param {String} message Message to emit                                                      // 7   // 223\n * @param {Object} data Data to send                                                            // 8   // 224\n * @param {Array|String} except Which sid should we exclude from the broadcast message          // 9   // 225\n */                                                                                             // 10  // 226\nStreamy.broadcast = function(message, data, except) { };                                        // 11  // 227\n//////////////////////////////////////////////////////////////////////////////////////////////////     // 228\n                                                                                                       // 229\n}).call(this);                                                                                         // 230\n                                                                                                       // 231\n                                                                                                       // 232\n                                                                                                       // 233\n                                                                                                       // 234\n                                                                                                       // 235\n                                                                                                       // 236\n(function () {                                                                                         // 237\n                                                                                                       // 238\n//////////////////////////////////////////////////////////////////////////////////////////////////     // 239\n//                                                                                              //     // 240\n// packages/yuukan:streamy/lib/utils/utils.js                                                   //     // 241\n//                                                                                              //     // 242\n//////////////////////////////////////////////////////////////////////////////////////////////////     // 243\n                                                                                                //     // 244\n// -------------------------------------------------------------------------- //                // 1   // 245\n// --------------------- Overriden by client/server ------------------------- //                // 2   // 246\n// -------------------------------------------------------------------------- //                // 3   // 247\n                                                                                                // 4   // 248\n/**                                                                                             // 5   // 249\n * Retrieve the connection id                                                                   // 6   // 250\n * @param  {Socket} socket On server, should be given to determine the concerned connection     // 7   // 251\n * @return {String}        The connection id                                                    // 8   // 252\n */                                                                                             // 9   // 253\nStreamy.id = function(socket) {};                                                               // 10  // 254\n                                                                                                // 11  // 255\n/**                                                                                             // 12  // 256\n * Retrieve the user id                                                                         // 13  // 257\n * @param {Socket} socket On server, should be given to determine the concerned user            // 14  // 258\n */                                                                                             // 15  // 259\nStreamy.userId = function(socket) {};                                                           // 16  // 260\n                                                                                                // 17  // 261\n/**                                                                                             // 18  // 262\n * Retrieve the user                                                                            // 19  // 263\n * @param {Socket} socket On server, should be given to determine the concerned user            // 20  // 264\n */                                                                                             // 21  // 265\nStreamy.user = function(socket) {};                                                             // 22  // 266\n//////////////////////////////////////////////////////////////////////////////////////////////////     // 267\n                                                                                                       // 268\n}).call(this);                                                                                         // 269\n                                                                                                       // 270\n                                                                                                       // 271\n                                                                                                       // 272\n                                                                                                       // 273\n                                                                                                       // 274\n                                                                                                       // 275\n(function () {                                                                                         // 276\n                                                                                                       // 277\n//////////////////////////////////////////////////////////////////////////////////////////////////     // 278\n//                                                                                              //     // 279\n// packages/yuukan:streamy/lib/core/core_client.js                                              //     // 280\n//                                                                                              //     // 281\n//////////////////////////////////////////////////////////////////////////////////////////////////     // 282\n                                                                                                //     // 283\n// -------------------------------------------------------------------------- //                // 1   // 284\n// ------------------------------- Overrides -------------------------------- //                // 2   // 285\n// -------------------------------------------------------------------------- //                // 3   // 286\n                                                                                                // 4   // 287\nStreamy.init = function() {                                                                     // 5   // 288\n                                                                                                // 6   // 289\n  var self = this;                                                                              // 7   // 290\n                                                                                                // 8   // 291\n  // Uppon close                                                                                // 9   // 292\n  Meteor.default_connection._stream.on('disconnect', function onClose() {                       // 10  // 293\n    // If it was previously connected, call disconnect handlers                                 // 11  // 294\n    if(Meteor.default_connection._stream.status().connected) {                                  // 12  // 295\n      _.each(self.disconnectHandlers(), function forEachDisconnectHandler(cb) {                 // 13  // 296\n        cb.call(self);                                                                          // 14  // 297\n      });                                                                                       // 15  // 298\n    }                                                                                           // 16  // 299\n  });                                                                                           // 17  // 300\n                                                                                                // 18  // 301\n  // Attach message handlers                                                                    // 19  // 302\n  Meteor.default_connection._stream.on('message', function onMessage(data) {                    // 20  // 303\n                                                                                                // 21  // 304\n    // Parse the message                                                                        // 22  // 305\n    var parsed_data = JSON.parse(data);                                                         // 23  // 306\n                                                                                                // 24  // 307\n    // Retrieve the msg value                                                                   // 25  // 308\n    var msg = parsed_data.msg;                                                                  // 26  // 309\n                                                                                                // 27  // 310\n    // And dismiss it                                                                           // 28  // 311\n    delete parsed_data.msg;                                                                     // 29  // 312\n                                                                                                // 30  // 313\n    // If its the connected message                                                             // 31  // 314\n    if(msg === 'connected') {                                                                   // 32  // 315\n      // Call each handlers                                                                     // 33  // 316\n      _.each(self.connectHandlers(), function forEachConnectHandler(cb) {                       // 34  // 317\n        cb.call(self);                                                                          // 35  // 318\n      });                                                                                       // 36  // 319\n    }                                                                                           // 37  // 320\n    else if(msg) {                                                                              // 38  // 321\n      // Else, call the appropriate handler                                                     // 39  // 322\n      self.handlers(msg).call(self, parsed_data);                                               // 40  // 323\n    }                                                                                           // 41  // 324\n  });                                                                                           // 42  // 325\n                                                                                                // 43  // 326\n                                                                                                // 44  // 327\n};                                                                                              // 45  // 328\n                                                                                                // 46  // 329\nStreamy._write = function(data) {                                                               // 47  // 330\n  Meteor.default_connection._stream.send(data);                                                 // 48  // 331\n};                                                                                              // 49  // 332\n//////////////////////////////////////////////////////////////////////////////////////////////////     // 333\n                                                                                                       // 334\n}).call(this);                                                                                         // 335\n                                                                                                       // 336\n                                                                                                       // 337\n                                                                                                       // 338\n                                                                                                       // 339\n                                                                                                       // 340\n                                                                                                       // 341\n(function () {                                                                                         // 342\n                                                                                                       // 343\n//////////////////////////////////////////////////////////////////////////////////////////////////     // 344\n//                                                                                              //     // 345\n// packages/yuukan:streamy/lib/direct_messages/direct_messages_client.js                        //     // 346\n//                                                                                              //     // 347\n//////////////////////////////////////////////////////////////////////////////////////////////////     // 348\n                                                                                                //     // 349\n// -------------------------------------------------------------------------- //                // 1   // 350\n// ------------------------------- Overrides -------------------------------- //                // 2   // 351\n// -------------------------------------------------------------------------- //                // 3   // 352\n                                                                                                // 4   // 353\nStreamy._sessionsEmit = function(sid) {                                                         // 5   // 354\n  return function(msg, data) {                                                                  // 6   // 355\n    Streamy.emit('__direct__', {                                                                // 7   // 356\n      '__to': sid,                                                                              // 8   // 357\n      '__msg': msg,                                                                             // 9   // 358\n      '__data': data                                                                            // 10  // 359\n    });                                                                                         // 11  // 360\n  };                                                                                            // 12  // 361\n};                                                                                              // 13  // 362\n                                                                                                // 14  // 363\nStreamy._sessionsForUsersEmit = function(uid) {                                                 // 15  // 364\n  return function(msg, data) {                                                                  // 16  // 365\n    Streamy.emit('__direct__', {                                                                // 17  // 366\n      '__to_users': uid,                                                                        // 18  // 367\n      '__msg': msg,                                                                             // 19  // 368\n      '__data': data                                                                            // 20  // 369\n    });                                                                                         // 21  // 370\n  };                                                                                            // 22  // 371\n}                                                                                               // 23  // 372\n                                                                                                // 24  // 373\n//////////////////////////////////////////////////////////////////////////////////////////////////     // 374\n                                                                                                       // 375\n}).call(this);                                                                                         // 376\n                                                                                                       // 377\n                                                                                                       // 378\n                                                                                                       // 379\n                                                                                                       // 380\n                                                                                                       // 381\n                                                                                                       // 382\n(function () {                                                                                         // 383\n                                                                                                       // 384\n//////////////////////////////////////////////////////////////////////////////////////////////////     // 385\n//                                                                                              //     // 386\n// packages/yuukan:streamy/lib/broadcasts/broadcasts_client.js                                  //     // 387\n//                                                                                              //     // 388\n//////////////////////////////////////////////////////////////////////////////////////////////////     // 389\n                                                                                                //     // 390\n// -------------------------------------------------------------------------- //                // 1   // 391\n// ------------------------------- Overrides -------------------------------- //                // 2   // 392\n// -------------------------------------------------------------------------- //                // 3   // 393\n                                                                                                // 4   // 394\nStreamy.broadcast = function(message, data, except) {                                           // 5   // 395\n  Streamy.emit('__broadcast__', {                                                               // 6   // 396\n    '__msg': message,                                                                           // 7   // 397\n    '__data': data,                                                                             // 8   // 398\n    '__except': except                                                                          // 9   // 399\n  });                                                                                           // 10  // 400\n};                                                                                              // 11  // 401\n//////////////////////////////////////////////////////////////////////////////////////////////////     // 402\n                                                                                                       // 403\n}).call(this);                                                                                         // 404\n                                                                                                       // 405\n                                                                                                       // 406\n                                                                                                       // 407\n                                                                                                       // 408\n                                                                                                       // 409\n                                                                                                       // 410\n(function () {                                                                                         // 411\n                                                                                                       // 412\n//////////////////////////////////////////////////////////////////////////////////////////////////     // 413\n//                                                                                              //     // 414\n// packages/yuukan:streamy/lib/utils/utils_client.js                                            //     // 415\n//                                                                                              //     // 416\n//////////////////////////////////////////////////////////////////////////////////////////////////     // 417\n                                                                                                //     // 418\n// -------------------------------------------------------------------------- //                // 1   // 419\n// ------------------------------- Overrides -------------------------------- //                // 2   // 420\n// -------------------------------------------------------------------------- //                // 3   // 421\n                                                                                                // 4   // 422\nStreamy.id = function() {                                                                       // 5   // 423\n  return Meteor.connection._lastSessionId;                                                      // 6   // 424\n};                                                                                              // 7   // 425\n                                                                                                // 8   // 426\nStreamy.userId = function(socket) {                                                             // 9   // 427\n  if(!Meteor.userId)                                                                            // 10  // 428\n    throw new Meteor.Error(500, 'Could not retrieve user id, is accounts-base installed?');     // 11  // 429\n                                                                                                // 12  // 430\n  return Meteor.userId();                                                                       // 13  // 431\n};                                                                                              // 14  // 432\n                                                                                                // 15  // 433\nStreamy.user = function(socket) {                                                               // 16  // 434\n  if(!Meteor.user)                                                                              // 17  // 435\n    throw new Meteor.Error(500, 'Could not retrieve user, is accounts-base installed?');        // 18  // 436\n                                                                                                // 19  // 437\n  return Meteor.user();                                                                         // 20  // 438\n};                                                                                              // 21  // 439\n//////////////////////////////////////////////////////////////////////////////////////////////////     // 440\n                                                                                                       // 441\n}).call(this);                                                                                         // 442\n                                                                                                       // 443\n                                                                                                       // 444\n                                                                                                       // 445\n                                                                                                       // 446\n                                                                                                       // 447\n                                                                                                       // 448\n(function () {                                                                                         // 449\n                                                                                                       // 450\n//////////////////////////////////////////////////////////////////////////////////////////////////     // 451\n//                                                                                              //     // 452\n// packages/yuukan:streamy/lib/startup.js                                                       //     // 453\n//                                                                                              //     // 454\n//////////////////////////////////////////////////////////////////////////////////////////////////     // 455\n                                                                                                //     // 456\n/**                                                                                             // 1   // 457\n * When the application starts up, register handlers!                                           // 2   // 458\n */                                                                                             // 3   // 459\nMeteor.startup(function onStartup() {                                                           // 4   // 460\n  Streamy.init();                                                                               // 5   // 461\n});                                                                                             // 6   // 462\n//////////////////////////////////////////////////////////////////////////////////////////////////     // 463\n                                                                                                       // 464\n}).call(this);                                                                                         // 465\n                                                                                                       // 466\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['yuukan:streamy'] = {}, {\n  Streamy: Streamy\n});\n\n})();\n","servePath":"/packages/yuukan_streamy.js","sourceMap":{"version":3,"sources":["/packages/yuukan_streamy/packages/yuukan_streamy.js"],"names":[],"mappingsfile":"/packages/yuukan_streamy.js","sourcesContent":["(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// packages/yuukan:streamy/lib/namespaces.js                                                    //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\nStreamy = {};                                                                                   // 1\nStreamy.BroadCasts = {};                                                                        // 2\nStreamy.DirectMessages = {};                                                                    // 3\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// packages/yuukan:streamy/lib/core/core.js                                                     //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\nvar handlers = {};                                                                              // 1\nvar connect_handlers = [];                                                                      // 2\nvar disconnect_handlers = [];                                                                   // 3\n                                                                                                // 4\n// -------------------------------------------------------------------------- //                // 5\n// --------------------- Overriden by client/server ------------------------- //                // 6\n// -------------------------------------------------------------------------- //                // 7\n                                                                                                // 8\n/**                                                                                             // 9\n * Init streamy, attach base handlers in client/server                                          // 10\n */                                                                                             // 11\nStreamy.init = function() { };                                                                  // 12\n                                                                                                // 13\n/**                                                                                             // 14\n * Write the message on the socket                                                              // 15\n * @param {String} data Data stringified                                                        // 16\n * @param {Object} to (Server side) Which socket should we use                                  // 17\n */                                                                                             // 18\nStreamy._write = function(data, to) { };                                                        // 19\n                                                                                                // 20\n// -------------------------------------------------------------------------- //                // 21\n// ------------------------------ Accessors --------------------------------- //                // 22\n// -------------------------------------------------------------------------- //                // 23\n                                                                                                // 24\n/**                                                                                             // 25\n * Retrieve connect handlers                                                                    // 26\n */                                                                                             // 27\nStreamy.connectHandlers = function() {                                                          // 28\n  return connect_handlers;                                                                      // 29\n};                                                                                              // 30\n                                                                                                // 31\n/**                                                                                             // 32\n * Retrieve disconnect handlers                                                                 // 33\n */                                                                                             // 34\nStreamy.disconnectHandlers = function() {                                                       // 35\n  return disconnect_handlers;                                                                   // 36\n};                                                                                              // 37\n                                                                                                // 38\n/**                                                                                             // 39\n * Retrieve all handlers or the one for the given message                                       // 40\n * @param {String} message Optional, if defined, returns the handler for this specific messsage // 41\n */                                                                                             // 42\nStreamy.handlers = function(message) {                                                          // 43\n  if(message) {                                                                                 // 44\n    var handler = handlers[message];                                                            // 45\n    if(!handler)                                                                                // 46\n      handler = function() {};                                                                  // 47\n                                                                                                // 48\n    return handler;                                                                             // 49\n  }                                                                                             // 50\n                                                                                                // 51\n  return handlers;                                                                              // 52\n};                                                                                              // 53\n                                                                                                // 54\n// -------------------------------------------------------------------------- //                // 55\n// -------------------------- Common interface ------------------------------ //                // 56\n// -------------------------------------------------------------------------- //                // 57\n                                                                                                // 58\n/**                                                                                             // 59\n * Apply a specific prefix to avoid name conflicts                                              // 60\n * @param {String} value Base value                                                             // 61\n * @return {String} The base value prefixed                                                     // 62\n */                                                                                             // 63\nStreamy._applyPrefix = function(value) {                                                        // 64\n  return 'streamy$' + value;                                                                    // 65\n};                                                                                              // 66\n                                                                                                // 67\n/**                                                                                             // 68\n * Register an handler for the given message type                                               // 69\n * @param {String} message Message name to handle                                               // 70\n * @param {Function} callback Callback to call when this message is received                    // 71\n */                                                                                             // 72\nStreamy.on = function(message, callback) {                                                      // 73\n  message = Streamy._applyPrefix(message);                                                      // 74\n  handlers[message] = Meteor.bindEnvironment(callback);                                         // 75\n};                                                                                              // 76\n                                                                                                // 77\n/**                                                                                             // 78\n * Adds an handler for the connection success                                                   // 79\n * @param {Function} callback Callback to call upon connection                                  // 80\n */                                                                                             // 81\nStreamy.onConnect = function(callback) {                                                        // 82\n  connect_handlers.push(Meteor.bindEnvironment(callback));                                      // 83\n};                                                                                              // 84\n                                                                                                // 85\n/**                                                                                             // 86\n * Adds an handler for the disconnection                                                        // 87\n * @param {Function} callback Callback to call upon disconnect                                  // 88\n */                                                                                             // 89\nStreamy.onDisconnect = function(callback) {                                                     // 90\n  disconnect_handlers.push(Meteor.bindEnvironment(callback));                                   // 91\n};                                                                                              // 92\n                                                                                                // 93\n/**                                                                                             // 94\n * Emits a message with the given name and associated data                                      // 95\n * @param {String} message Message name to emit                                                 // 96\n * @param {Object} data Data to send                                                            // 97\n * @param {Socket} to (Server side only) which socket we should use                             // 98\n */                                                                                             // 99\nStreamy.emit = function(message, data, to) {                                                    // 100\n  data = data || {};                                                                            // 101\n  message = Streamy._applyPrefix(message);                                                      // 102\n                                                                                                // 103\n  check(message, String);                                                                       // 104\n  check(data, Object);                                                                          // 105\n                                                                                                // 106\n  data.msg = message;                                                                           // 107\n                                                                                                // 108\n  Streamy._write(JSON.stringify(data), to);                                                     // 109\n};                                                                                              // 110\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// packages/yuukan:streamy/lib/direct_messages/direct_messages.js                               //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\n// -------------------------------------------------------------------------- //                // 1\n// --------------------- Overriden by client/server ------------------------- //                // 2\n// -------------------------------------------------------------------------- //                // 3\n                                                                                                // 4\n/**                                                                                             // 5\n * Gets the wrapper for the emit returned by Streamy.sessions(sid)                              // 6\n * @param {String|Array} sid Session id(s)                                                      // 7\n * @return  {Function}  Function which will be called by emit on the session                    // 8\n */                                                                                             // 9\nStreamy._sessionsEmit = function(sid) { };                                                      // 10\n                                                                                                // 11\n/**                                                                                             // 12\n * Gets the wrapper for the emit returned by Streamy.sessionsForUsers(sid)                      // 13\n * @param {String|Array} uid User id(s)                                                         // 14\n * @return  {Function}  Function which will be called by emit on the session                    // 15\n */                                                                                             // 16\nStreamy._sessionsForUsersEmit = function(uid) { };                                              // 17\n                                                                                                // 18\n// -------------------------------------------------------------------------- //                // 19\n// -------------------------- Common interface ------------------------------ //                // 20\n// -------------------------------------------------------------------------- //                // 21\n                                                                                                // 22\n/**                                                                                             // 23\n * Returns an object for the targetted session id(s) which contains an emit method              // 24\n * @param {String|Array} sid Session id(s)                                                      // 25\n * @return  {Object}  Object with an emit function                                              // 26\n */                                                                                             // 27\nStreamy.sessions = function(sid) {                                                              // 28\n  return {                                                                                      // 29\n    emit: Streamy._sessionsEmit(sid)                                                            // 30\n  };                                                                                            // 31\n};                                                                                              // 32\n                                                                                                // 33\n/**                                                                                             // 34\n * Returns an object for the targetted user id(s) which contains an emit method                 // 35\n * @param {String|Array} uid User id(s)                                                         // 36\n * @return  {Object}  Object with an emit function                                              // 37\n */                                                                                             // 38\nStreamy.sessionsForUsers = function(uid) {                                                      // 39\n  return {                                                                                      // 40\n    emit: Streamy._sessionsForUsersEmit(uid)                                                    // 41\n  }                                                                                             // 42\n};                                                                                              // 43\n                                                                                                // 44\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// packages/yuukan:streamy/lib/broadcasts/broadcasts.js                                         //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\n// -------------------------------------------------------------------------- //                // 1\n// --------------------- Overriden by client/server ------------------------- //                // 2\n// -------------------------------------------------------------------------- //                // 3\n                                                                                                // 4\n/**                                                                                             // 5\n * Returns an object for the targetted session id which contains an emit method                 // 6\n * @param {String} message Message to emit                                                      // 7\n * @param {Object} data Data to send                                                            // 8\n * @param {Array|String} except Which sid should we exclude from the broadcast message          // 9\n */                                                                                             // 10\nStreamy.broadcast = function(message, data, except) { };                                        // 11\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// packages/yuukan:streamy/lib/utils/utils.js                                                   //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\n// -------------------------------------------------------------------------- //                // 1\n// --------------------- Overriden by client/server ------------------------- //                // 2\n// -------------------------------------------------------------------------- //                // 3\n                                                                                                // 4\n/**                                                                                             // 5\n * Retrieve the connection id                                                                   // 6\n * @param  {Socket} socket On server, should be given to determine the concerned connection     // 7\n * @return {String}        The connection id                                                    // 8\n */                                                                                             // 9\nStreamy.id = function(socket) {};                                                               // 10\n                                                                                                // 11\n/**                                                                                             // 12\n * Retrieve the user id                                                                         // 13\n * @param {Socket} socket On server, should be given to determine the concerned user            // 14\n */                                                                                             // 15\nStreamy.userId = function(socket) {};                                                           // 16\n                                                                                                // 17\n/**                                                                                             // 18\n * Retrieve the user                                                                            // 19\n * @param {Socket} socket On server, should be given to determine the concerned user            // 20\n */                                                                                             // 21\nStreamy.user = function(socket) {};                                                             // 22\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// packages/yuukan:streamy/lib/core/core_client.js                                              //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\n// -------------------------------------------------------------------------- //                // 1\n// ------------------------------- Overrides -------------------------------- //                // 2\n// -------------------------------------------------------------------------- //                // 3\n                                                                                                // 4\nStreamy.init = function() {                                                                     // 5\n                                                                                                // 6\n  var self = this;                                                                              // 7\n                                                                                                // 8\n  // Uppon close                                                                                // 9\n  Meteor.default_connection._stream.on('disconnect', function onClose() {                       // 10\n    // If it was previously connected, call disconnect handlers                                 // 11\n    if(Meteor.default_connection._stream.status().connected) {                                  // 12\n      _.each(self.disconnectHandlers(), function forEachDisconnectHandler(cb) {                 // 13\n        cb.call(self);                                                                          // 14\n      });                                                                                       // 15\n    }                                                                                           // 16\n  });                                                                                           // 17\n                                                                                                // 18\n  // Attach message handlers                                                                    // 19\n  Meteor.default_connection._stream.on('message', function onMessage(data) {                    // 20\n                                                                                                // 21\n    // Parse the message                                                                        // 22\n    var parsed_data = JSON.parse(data);                                                         // 23\n                                                                                                // 24\n    // Retrieve the msg value                                                                   // 25\n    var msg = parsed_data.msg;                                                                  // 26\n                                                                                                // 27\n    // And dismiss it                                                                           // 28\n    delete parsed_data.msg;                                                                     // 29\n                                                                                                // 30\n    // If its the connected message                                                             // 31\n    if(msg === 'connected') {                                                                   // 32\n      // Call each handlers                                                                     // 33\n      _.each(self.connectHandlers(), function forEachConnectHandler(cb) {                       // 34\n        cb.call(self);                                                                          // 35\n      });                                                                                       // 36\n    }                                                                                           // 37\n    else if(msg) {                                                                              // 38\n      // Else, call the appropriate handler                                                     // 39\n      self.handlers(msg).call(self, parsed_data);                                               // 40\n    }                                                                                           // 41\n  });                                                                                           // 42\n                                                                                                // 43\n                                                                                                // 44\n};                                                                                              // 45\n                                                                                                // 46\nStreamy._write = function(data) {                                                               // 47\n  Meteor.default_connection._stream.send(data);                                                 // 48\n};                                                                                              // 49\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// packages/yuukan:streamy/lib/direct_messages/direct_messages_client.js                        //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\n// -------------------------------------------------------------------------- //                // 1\n// ------------------------------- Overrides -------------------------------- //                // 2\n// -------------------------------------------------------------------------- //                // 3\n                                                                                                // 4\nStreamy._sessionsEmit = function(sid) {                                                         // 5\n  return function(msg, data) {                                                                  // 6\n    Streamy.emit('__direct__', {                                                                // 7\n      '__to': sid,                                                                              // 8\n      '__msg': msg,                                                                             // 9\n      '__data': data                                                                            // 10\n    });                                                                                         // 11\n  };                                                                                            // 12\n};                                                                                              // 13\n                                                                                                // 14\nStreamy._sessionsForUsersEmit = function(uid) {                                                 // 15\n  return function(msg, data) {                                                                  // 16\n    Streamy.emit('__direct__', {                                                                // 17\n      '__to_users': uid,                                                                        // 18\n      '__msg': msg,                                                                             // 19\n      '__data': data                                                                            // 20\n    });                                                                                         // 21\n  };                                                                                            // 22\n}                                                                                               // 23\n                                                                                                // 24\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// packages/yuukan:streamy/lib/broadcasts/broadcasts_client.js                                  //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\n// -------------------------------------------------------------------------- //                // 1\n// ------------------------------- Overrides -------------------------------- //                // 2\n// -------------------------------------------------------------------------- //                // 3\n                                                                                                // 4\nStreamy.broadcast = function(message, data, except) {                                           // 5\n  Streamy.emit('__broadcast__', {                                                               // 6\n    '__msg': message,                                                                           // 7\n    '__data': data,                                                                             // 8\n    '__except': except                                                                          // 9\n  });                                                                                           // 10\n};                                                                                              // 11\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// packages/yuukan:streamy/lib/utils/utils_client.js                                            //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\n// -------------------------------------------------------------------------- //                // 1\n// ------------------------------- Overrides -------------------------------- //                // 2\n// -------------------------------------------------------------------------- //                // 3\n                                                                                                // 4\nStreamy.id = function() {                                                                       // 5\n  return Meteor.connection._lastSessionId;                                                      // 6\n};                                                                                              // 7\n                                                                                                // 8\nStreamy.userId = function(socket) {                                                             // 9\n  if(!Meteor.userId)                                                                            // 10\n    throw new Meteor.Error(500, 'Could not retrieve user id, is accounts-base installed?');     // 11\n                                                                                                // 12\n  return Meteor.userId();                                                                       // 13\n};                                                                                              // 14\n                                                                                                // 15\nStreamy.user = function(socket) {                                                               // 16\n  if(!Meteor.user)                                                                              // 17\n    throw new Meteor.Error(500, 'Could not retrieve user, is accounts-base installed?');        // 18\n                                                                                                // 19\n  return Meteor.user();                                                                         // 20\n};                                                                                              // 21\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// packages/yuukan:streamy/lib/startup.js                                                       //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\n/**                                                                                             // 1\n * When the application starts up, register handlers!                                           // 2\n */                                                                                             // 3\nMeteor.startup(function onStartup() {                                                           // 4\n  Streamy.init();                                                                               // 5\n});                                                                                             // 6\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}}]