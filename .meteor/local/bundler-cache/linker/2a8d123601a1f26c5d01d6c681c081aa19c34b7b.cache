[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar _ = Package.underscore._;\nvar MongoInternals = Package.mongo.MongoInternals;\nvar Mongo = Package.mongo.Mongo;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar ReactiveVar = Package['reactive-var'].ReactiveVar;\n\n/* Package-scope variables */\nvar Streamy;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/yuukan_streamy/packages/yuukan_streamy.js                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// packages/yuukan:streamy/lib/namespaces.js                                                                      //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\nStreamy = {};                                                                                                     // 1\nStreamy.BroadCasts = {};                                                                                          // 2\nStreamy.DirectMessages = {};                                                                                      // 3\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// packages/yuukan:streamy/lib/core/core.js                                                                       //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\nvar handlers = {};                                                                                                // 1\nvar connect_handlers = [];                                                                                        // 2\nvar disconnect_handlers = [];                                                                                     // 3\n                                                                                                                  // 4\n// -------------------------------------------------------------------------- //                                  // 5\n// --------------------- Overriden by client/server ------------------------- //                                  // 6\n// -------------------------------------------------------------------------- //                                  // 7\n                                                                                                                  // 8\n/**                                                                                                               // 9\n * Init streamy, attach base handlers in client/server                                                            // 10\n */                                                                                                               // 11\nStreamy.init = function() { };                                                                                    // 12\n                                                                                                                  // 13\n/**                                                                                                               // 14\n * Write the message on the socket                                                                                // 15\n * @param {String} data Data stringified                                                                          // 16\n * @param {Object} to (Server side) Which socket should we use                                                    // 17\n */                                                                                                               // 18\nStreamy._write = function(data, to) { };                                                                          // 19\n                                                                                                                  // 20\n// -------------------------------------------------------------------------- //                                  // 21\n// ------------------------------ Accessors --------------------------------- //                                  // 22\n// -------------------------------------------------------------------------- //                                  // 23\n                                                                                                                  // 24\n/**                                                                                                               // 25\n * Retrieve connect handlers                                                                                      // 26\n */                                                                                                               // 27\nStreamy.connectHandlers = function() {                                                                            // 28\n  return connect_handlers;                                                                                        // 29\n};                                                                                                                // 30\n                                                                                                                  // 31\n/**                                                                                                               // 32\n * Retrieve disconnect handlers                                                                                   // 33\n */                                                                                                               // 34\nStreamy.disconnectHandlers = function() {                                                                         // 35\n  return disconnect_handlers;                                                                                     // 36\n};                                                                                                                // 37\n                                                                                                                  // 38\n/**                                                                                                               // 39\n * Retrieve all handlers or the one for the given message                                                         // 40\n * @param {String} message Optional, if defined, returns the handler for this specific messsage                   // 41\n */                                                                                                               // 42\nStreamy.handlers = function(message) {                                                                            // 43\n  if(message) {                                                                                                   // 44\n    var handler = handlers[message];                                                                              // 45\n    if(!handler)                                                                                                  // 46\n      handler = function() {};                                                                                    // 47\n                                                                                                                  // 48\n    return handler;                                                                                               // 49\n  }                                                                                                               // 50\n                                                                                                                  // 51\n  return handlers;                                                                                                // 52\n};                                                                                                                // 53\n                                                                                                                  // 54\n// -------------------------------------------------------------------------- //                                  // 55\n// -------------------------- Common interface ------------------------------ //                                  // 56\n// -------------------------------------------------------------------------- //                                  // 57\n                                                                                                                  // 58\n/**                                                                                                               // 59\n * Apply a specific prefix to avoid name conflicts                                                                // 60\n * @param {String} value Base value                                                                               // 61\n * @return {String} The base value prefixed                                                                       // 62\n */                                                                                                               // 63\nStreamy._applyPrefix = function(value) {                                                                          // 64\n  return 'streamy$' + value;                                                                                      // 65\n};                                                                                                                // 66\n                                                                                                                  // 67\n/**                                                                                                               // 68\n * Register an handler for the given message type                                                                 // 69\n * @param {String} message Message name to handle                                                                 // 70\n * @param {Function} callback Callback to call when this message is received                                      // 71\n */                                                                                                               // 72\nStreamy.on = function(message, callback) {                                                                        // 73\n  message = Streamy._applyPrefix(message);                                                                        // 74\n  handlers[message] = Meteor.bindEnvironment(callback);                                                           // 75\n};                                                                                                                // 76\n                                                                                                                  // 77\n/**                                                                                                               // 78\n * Adds an handler for the connection success                                                                     // 79\n * @param {Function} callback Callback to call upon connection                                                    // 80\n */                                                                                                               // 81\nStreamy.onConnect = function(callback) {                                                                          // 82\n  connect_handlers.push(Meteor.bindEnvironment(callback));                                                        // 83\n};                                                                                                                // 84\n                                                                                                                  // 85\n/**                                                                                                               // 86\n * Adds an handler for the disconnection                                                                          // 87\n * @param {Function} callback Callback to call upon disconnect                                                    // 88\n */                                                                                                               // 89\nStreamy.onDisconnect = function(callback) {                                                                       // 90\n  disconnect_handlers.push(Meteor.bindEnvironment(callback));                                                     // 91\n};                                                                                                                // 92\n                                                                                                                  // 93\n/**                                                                                                               // 94\n * Emits a message with the given name and associated data                                                        // 95\n * @param {String} message Message name to emit                                                                   // 96\n * @param {Object} data Data to send                                                                              // 97\n * @param {Socket} to (Server side only) which socket we should use                                               // 98\n */                                                                                                               // 99\nStreamy.emit = function(message, data, to) {                                                                      // 100\n  data = data || {};                                                                                              // 101\n  message = Streamy._applyPrefix(message);                                                                        // 102\n                                                                                                                  // 103\n  check(message, String);                                                                                         // 104\n  check(data, Object);                                                                                            // 105\n                                                                                                                  // 106\n  data.msg = message;                                                                                             // 107\n                                                                                                                  // 108\n  Streamy._write(JSON.stringify(data), to);                                                                       // 109\n};                                                                                                                // 110\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// packages/yuukan:streamy/lib/direct_messages/direct_messages.js                                                 //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n// -------------------------------------------------------------------------- //                                  // 1\n// --------------------- Overriden by client/server ------------------------- //                                  // 2\n// -------------------------------------------------------------------------- //                                  // 3\n                                                                                                                  // 4\n/**                                                                                                               // 5\n * Gets the wrapper for the emit returned by Streamy.sessions(sid)                                                // 6\n * @param {String|Array} sid Session id(s)                                                                        // 7\n * @return  {Function}  Function which will be called by emit on the session                                      // 8\n */                                                                                                               // 9\nStreamy._sessionsEmit = function(sid) { };                                                                        // 10\n                                                                                                                  // 11\n/**                                                                                                               // 12\n * Gets the wrapper for the emit returned by Streamy.sessionsForUsers(sid)                                        // 13\n * @param {String|Array} uid User id(s)                                                                           // 14\n * @return  {Function}  Function which will be called by emit on the session                                      // 15\n */                                                                                                               // 16\nStreamy._sessionsForUsersEmit = function(uid) { };                                                                // 17\n                                                                                                                  // 18\n// -------------------------------------------------------------------------- //                                  // 19\n// -------------------------- Common interface ------------------------------ //                                  // 20\n// -------------------------------------------------------------------------- //                                  // 21\n                                                                                                                  // 22\n/**                                                                                                               // 23\n * Returns an object for the targetted session id(s) which contains an emit method                                // 24\n * @param {String|Array} sid Session id(s)                                                                        // 25\n * @return  {Object}  Object with an emit function                                                                // 26\n */                                                                                                               // 27\nStreamy.sessions = function(sid) {                                                                                // 28\n  return {                                                                                                        // 29\n    emit: Streamy._sessionsEmit(sid)                                                                              // 30\n  };                                                                                                              // 31\n};                                                                                                                // 32\n                                                                                                                  // 33\n/**                                                                                                               // 34\n * Returns an object for the targetted user id(s) which contains an emit method                                   // 35\n * @param {String|Array} uid User id(s)                                                                           // 36\n * @return  {Object}  Object with an emit function                                                                // 37\n */                                                                                                               // 38\nStreamy.sessionsForUsers = function(uid) {                                                                        // 39\n  return {                                                                                                        // 40\n    emit: Streamy._sessionsForUsersEmit(uid)                                                                      // 41\n  }                                                                                                               // 42\n};                                                                                                                // 43\n                                                                                                                  // 44\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// packages/yuukan:streamy/lib/broadcasts/broadcasts.js                                                           //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n// -------------------------------------------------------------------------- //                                  // 1\n// --------------------- Overriden by client/server ------------------------- //                                  // 2\n// -------------------------------------------------------------------------- //                                  // 3\n                                                                                                                  // 4\n/**                                                                                                               // 5\n * Returns an object for the targetted session id which contains an emit method                                   // 6\n * @param {String} message Message to emit                                                                        // 7\n * @param {Object} data Data to send                                                                              // 8\n * @param {Array|String} except Which sid should we exclude from the broadcast message                            // 9\n */                                                                                                               // 10\nStreamy.broadcast = function(message, data, except) { };                                                          // 11\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// packages/yuukan:streamy/lib/utils/utils.js                                                                     //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n// -------------------------------------------------------------------------- //                                  // 1\n// --------------------- Overriden by client/server ------------------------- //                                  // 2\n// -------------------------------------------------------------------------- //                                  // 3\n                                                                                                                  // 4\n/**                                                                                                               // 5\n * Retrieve the connection id                                                                                     // 6\n * @param  {Socket} socket On server, should be given to determine the concerned connection                       // 7\n * @return {String}        The connection id                                                                      // 8\n */                                                                                                               // 9\nStreamy.id = function(socket) {};                                                                                 // 10\n                                                                                                                  // 11\n/**                                                                                                               // 12\n * Retrieve the user id                                                                                           // 13\n * @param {Socket} socket On server, should be given to determine the concerned user                              // 14\n */                                                                                                               // 15\nStreamy.userId = function(socket) {};                                                                             // 16\n                                                                                                                  // 17\n/**                                                                                                               // 18\n * Retrieve the user                                                                                              // 19\n * @param {Socket} socket On server, should be given to determine the concerned user                              // 20\n */                                                                                                               // 21\nStreamy.user = function(socket) {};                                                                               // 22\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// packages/yuukan:streamy/lib/core/core_server.js                                                                //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\nvar sessions = {};                                                                                                // 1\n                                                                                                                  // 2\n// -------------------------------------------------------------------------- //                                  // 3\n// ------------------------------- Accessors -------------------------------- //                                  // 4\n// -------------------------------------------------------------------------- //                                  // 5\n                                                                                                                  // 6\n/**                                                                                                               // 7\n * Contains reactive variables for each connection id/user id                                                     // 8\n * @type {Object}                                                                                                 // 9\n */                                                                                                               // 10\nStreamy._usersId = {};                                                                                            // 11\n                                                                                                                  // 12\n/**                                                                                                               // 13\n * Retrieve server connected sockets or a subset                                                                  // 14\n * @param {String|Array} sid Optional, socket id or ids to retrieve                                               // 15\n * @return  {Object} If sid is provided, it will returns an object with a send method and _sockets array of sockets, else, it will returns all sockets\n */                                                                                                               // 17\nStreamy.sockets = function(sid) {                                                                                 // 18\n                                                                                                                  // 19\n  if(sid) {                                                                                                       // 20\n    sid = _.isArray(sid) ? sid : [sid];                                                                           // 21\n    var sockets = [];                                                                                             // 22\n                                                                                                                  // 23\n    _.each(sid, function(session_id) {                                                                            // 24\n      var sock = sessions[session_id];                                                                            // 25\n                                                                                                                  // 26\n      if(sock)                                                                                                    // 27\n        sockets.push(sock);                                                                                       // 28\n    });                                                                                                           // 29\n                                                                                                                  // 30\n    return {                                                                                                      // 31\n      _sockets: sockets,                                                                                          // 32\n      send: function(data) {                                                                                      // 33\n        _.each(sockets, function(socket) {                                                                        // 34\n          socket.send(data);                                                                                      // 35\n        });                                                                                                       // 36\n      }                                                                                                           // 37\n    }                                                                                                             // 38\n  }                                                                                                               // 39\n                                                                                                                  // 40\n  return sessions;                                                                                                // 41\n};                                                                                                                // 42\n                                                                                                                  // 43\n/**                                                                                                               // 44\n * Retrieve server connected sockets or a subset                                                                  // 45\n * @param {String|Array} uid Optional, user id or ids to retrieve                                                 // 46\n * @return  {Object} If uid is provided, it will returns an object with a send method and _sockets array of sockets, else, it will returns all sockets\n */                                                                                                               // 48\nStreamy.socketsForUsers = function(uid) {                                                                         // 49\n                                                                                                                  // 50\n  if(uid) {                                                                                                       // 51\n    uid = _.isArray(uid) ? uid : [uid];                                                                           // 52\n                                                                                                                  // 53\n    var sockets = _.filter(Streamy.sockets(), function(socket) {                                                  // 54\n      return uid.indexOf(socket._meteorSession.userId) !== -1;                                                    // 55\n    });                                                                                                           // 56\n                                                                                                                  // 57\n    return {                                                                                                      // 58\n      _sockets: sockets,                                                                                          // 59\n      send: function(data) {                                                                                      // 60\n        _.each(sockets, function(socket) {                                                                        // 61\n          socket.send(data);                                                                                      // 62\n        });                                                                                                       // 63\n      }                                                                                                           // 64\n    }                                                                                                             // 65\n  }                                                                                                               // 66\n                                                                                                                  // 67\n  return sessions;                                                                                                // 68\n                                                                                                                  // 69\n};                                                                                                                // 70\n                                                                                                                  // 71\n// -------------------------------------------------------------------------- //                                  // 72\n// ------------------------------- Overrides -------------------------------- //                                  // 73\n// -------------------------------------------------------------------------- //                                  // 74\n                                                                                                                  // 75\nStreamy.init = function() {                                                                                       // 76\n  var self = this;                                                                                                // 77\n                                                                                                                  // 78\n  // If accounts package is installed, register for successful login attempts                                     // 79\n  if(typeof(Accounts) !== 'undefined' ) {                                                                         // 80\n    Accounts.onLogin(function onLoggedIn(data) {                                                                  // 81\n      Streamy._usersId[data.connection.id].set(data.user._id);                                                    // 82\n    });                                                                                                           // 83\n  }                                                                                                               // 84\n                                                                                                                  // 85\n  // When a new connection has been received                                                                      // 86\n  Meteor.default_server.stream_server.register(function onNewConnected(socket) {                                  // 87\n    var handlers_registered = false;                                                                              // 88\n                                                                                                                  // 89\n    // On closed, call disconnect handlers                                                                        // 90\n    socket.on('close', function onSocketClosed() {                                                                // 91\n      if(handlers_registered) {                                                                                   // 92\n        var sid = Streamy.id(socket);                                                                             // 93\n                                                                                                                  // 94\n        delete sessions[sid];                                                                                     // 95\n        delete Streamy._usersId[sid];                                                                             // 96\n                                                                                                                  // 97\n        _.each(self.disconnectHandlers(), function forEachDisconnectHandler(cb) {                                 // 98\n          cb.call(self, socket);                                                                                  // 99\n        });                                                                                                       // 100\n      }                                                                                                           // 101\n    });                                                                                                           // 102\n                                                                                                                  // 103\n    // This little trick is used to register protocol handlers on the                                             // 104\n    // socket._meteorSession object, so we need it to be set                                                      // 105\n    socket.on('data', function onSocketData(raw_data) {                                                           // 106\n                                                                                                                  // 107\n      // Since we doesn't have a Accounts.onLogout callback, we must use this little trick, will be replaced when a proper callback is added\n      if(JSON.parse(raw_data).method === 'logout' && socket.__sid) {                                              // 109\n        Streamy._usersId[Streamy.id(socket)].set(null);                                                           // 110\n      }                                                                                                           // 111\n                                                                                                                  // 112\n      // Only if the socket as a meteor session                                                                   // 113\n      if(!handlers_registered && socket._meteorSession) {                                                         // 114\n                                                                                                                  // 115\n        // Store the meteorSesion id in an inner property since _meteorSession will be deleted upon socket closed // 116\n        socket.__sid = socket._meteorSession.id;                                                                  // 117\n                                                                                                                  // 118\n        var sid = Streamy.id(socket);                                                                             // 119\n                                                                                                                  // 120\n        handlers_registered = true;                                                                               // 121\n                                                                                                                  // 122\n        sessions[sid] = socket;                                                                                   // 123\n        Streamy._usersId[sid] = new ReactiveVar(null);                                                            // 124\n                                                                                                                  // 125\n        // Call connection handlers                                                                               // 126\n        _.each(self.connectHandlers(), function forEachConnectHandler(cb) {                                       // 127\n          cb.call(self, socket);                                                                                  // 128\n        });                                                                                                       // 129\n                                                                                                                  // 130\n        // Add each handler to the list of protocol handlers                                                      // 131\n        _.each(self.handlers(), function forEachHandler(cb, name) {                                               // 132\n          if(!socket._meteorSession.protocol_handlers[name]) {                                                    // 133\n            socket._meteorSession.protocol_handlers[name] = function onMessage(raw_msg) {                         // 134\n              delete raw_msg.msg; // Remove msg field                                                             // 135\n              cb.call(self, raw_msg, this.socket);                                                                // 136\n            };                                                                                                    // 137\n          }                                                                                                       // 138\n        });                                                                                                       // 139\n      }                                                                                                           // 140\n    });                                                                                                           // 141\n  });                                                                                                             // 142\n};                                                                                                                // 143\n                                                                                                                  // 144\nStreamy._write = function(data, to) {                                                                             // 145\n  if(to)                                                                                                          // 146\n    to.send(data);                                                                                                // 147\n};                                                                                                                // 148\n                                                                                                                  // 149\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// packages/yuukan:streamy/lib/direct_messages/direct_messages_server.js                                          //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n// -------------------------------------------------------------------------- //                                  // 1\n// ------------------------------ Allow/deny -------------------------------- //                                  // 2\n// -------------------------------------------------------------------------- //                                  // 3\n                                                                                                                  // 4\n/**                                                                                                               // 5\n * Wether or not the direct messages is allowed                                                                   // 6\n * @param {Object} data Data of the message                                                                       // 7\n * @param {Socket} from From socket                                                                               // 8\n * @param {Object} to Special object as returned by Streamy.sockets                                               // 9\n */                                                                                                               // 10\nStreamy.DirectMessages.allow = function(data, from, to) {                                                         // 11\n  return true;                                                                                                    // 12\n};                                                                                                                // 13\n                                                                                                                  // 14\n// -------------------------------------------------------------------------- //                                  // 15\n// -------------------------------- Handlers -------------------------------- //                                  // 16\n// -------------------------------------------------------------------------- //                                  // 17\n                                                                                                                  // 18\n/**                                                                                                               // 19\n * Attach the direct message handler                                                                              // 20\n * @param {Object} data Data object                                                                               // 21\n * @param {Socket} from Socket emitter                                                                            // 22\n */                                                                                                               // 23\nStreamy.on('__direct__', function(data, from) {                                                                   // 24\n                                                                                                                  // 25\n  // Check for sanity                                                                                             // 26\n  if(!data.__msg || !data.__data)                                                                                 // 27\n    return;                                                                                                       // 28\n                                                                                                                  // 29\n  var to_socks = null;                                                                                            // 30\n                                                                                                                  // 31\n  if(data.__to_users)                                                                                             // 32\n    to_socks = Streamy.socketsForUsers(data.__to_users);                                                          // 33\n  else if(data.__to)                                                                                              // 34\n    to_socks = Streamy.sockets(data.__to);                                                                        // 35\n                                                                                                                  // 36\n  if(!to_socks)                                                                                                   // 37\n    return;                                                                                                       // 38\n                                                                                                                  // 39\n  // Check if the server allows this direct message                                                               // 40\n  if(!Streamy.DirectMessages.allow(data, from, to_socks))                                                         // 41\n      return;                                                                                                     // 42\n                                                                                                                  // 43\n  // Attach the sender ID to the inner data                                                                       // 44\n  data.__data.__from = Streamy.id(from);                                                                          // 45\n                                                                                                                  // 46\n  // And then emit the message                                                                                    // 47\n  Streamy.emit(data.__msg, data.__data, to_socks);                                                                // 48\n});                                                                                                               // 49\n                                                                                                                  // 50\n// -------------------------------------------------------------------------- //                                  // 51\n// ------------------------------- Overrides -------------------------------- //                                  // 52\n// -------------------------------------------------------------------------- //                                  // 53\n                                                                                                                  // 54\nStreamy._sessionsEmit = function(sid) {                                                                           // 55\n  var socket = _.isObject(sid) ? sid : Streamy.sockets(sid);                                                      // 56\n                                                                                                                  // 57\n  return function(msg, data) {                                                                                    // 58\n    Streamy.emit(msg, data, socket);                                                                              // 59\n  };                                                                                                              // 60\n};                                                                                                                // 61\n                                                                                                                  // 62\nStreamy._sessionsForUsersEmit = function(uid) {                                                                   // 63\n  uid = _.isArray(uid) ? uid : [uid];                                                                             // 64\n  var sockets = Streamy.socketsForUsers(uid);                                                                     // 65\n                                                                                                                  // 66\n  return function(msg, data) {                                                                                    // 67\n    Streamy.emit(msg, data, sockets);                                                                             // 68\n  };                                                                                                              // 69\n};                                                                                                                // 70\n                                                                                                                  // 71\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// packages/yuukan:streamy/lib/broadcasts/broadcasts_server.js                                                    //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n// -------------------------------------------------------------------------- //                                  // 1\n// ------------------------------ Allow/deny -------------------------------- //                                  // 2\n// -------------------------------------------------------------------------- //                                  // 3\n                                                                                                                  // 4\n/**                                                                                                               // 5\n * Wether or not the broadcast is allowed                                                                         // 6\n * @param {Object} data Data of the message                                                                       // 7\n * @param {Socket} from From socket                                                                               // 8\n */                                                                                                               // 9\nStreamy.BroadCasts.allow = function(data, from) {                                                                 // 10\n  return true;                                                                                                    // 11\n};                                                                                                                // 12\n                                                                                                                  // 13\n// -------------------------------------------------------------------------- //                                  // 14\n// -------------------------------- Handlers -------------------------------- //                                  // 15\n// -------------------------------------------------------------------------- //                                  // 16\n                                                                                                                  // 17\n/**                                                                                                               // 18\n * Attach the broadcast message handler                                                                           // 19\n * @param {Object} data Data object                                                                               // 20\n * @param {Socket} from Socket emitter                                                                            // 21\n */                                                                                                               // 22\nStreamy.on('__broadcast__', function(data, from) {                                                                // 23\n                                                                                                                  // 24\n  // Check for sanity                                                                                             // 25\n  if(!data.__msg || !data.__data)                                                                                 // 26\n    return;                                                                                                       // 27\n                                                                                                                  // 28\n  // Check if the server allows this direct message                                                               // 29\n  if(!Streamy.BroadCasts.allow(data, from))                                                                       // 30\n      return;                                                                                                     // 31\n                                                                                                                  // 32\n  // Attach the sender ID to the inner data                                                                       // 33\n  data.__data.__from = Streamy.id(from);                                                                          // 34\n                                                                                                                  // 35\n  // And then emit the message                                                                                    // 36\n  Streamy.broadcast(data.__msg, data.__data, data.__except);                                                      // 37\n});                                                                                                               // 38\n                                                                                                                  // 39\n// -------------------------------------------------------------------------- //                                  // 40\n// ------------------------------- Overrides -------------------------------- //                                  // 41\n// -------------------------------------------------------------------------- //                                  // 42\n                                                                                                                  // 43\nStreamy.broadcast = function(message, data, except) {                                                             // 44\n  if(!_.isArray(except))                                                                                          // 45\n    except = [except];                                                                                            // 46\n                                                                                                                  // 47\n  _.each(Streamy.sockets(), function(sock) {                                                                      // 48\n    if(except.indexOf(Streamy.id(sock)) !== -1)                                                                   // 49\n      return;                                                                                                     // 50\n                                                                                                                  // 51\n    Streamy.emit(message, data, sock);                                                                            // 52\n  });                                                                                                             // 53\n};                                                                                                                // 54\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// packages/yuukan:streamy/lib/utils/utils_server.js                                                              //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n// -------------------------------------------------------------------------- //                                  // 1\n// ------------------------------- Overrides -------------------------------- //                                  // 2\n// -------------------------------------------------------------------------- //                                  // 3\n                                                                                                                  // 4\nStreamy.id = function(socket) {                                                                                   // 5\n  return socket.__sid;                                                                                            // 6\n};                                                                                                                // 7\n                                                                                                                  // 8\nStreamy.userId = function(socket) {                                                                               // 9\n  if(!socket)                                                                                                     // 10\n    throw new Meteor.Error(500, 'You should provides a socket server-side');                                      // 11\n                                                                                                                  // 12\n  return Streamy._usersId[Streamy.id(socket)].get();                                                              // 13\n};                                                                                                                // 14\n                                                                                                                  // 15\nStreamy.user = function(socket) {                                                                                 // 16\n  if(!Meteor.users)                                                                                               // 17\n    throw new Meteor.Error(500, 'Could not retrieve user, is accounts-base installed?');                          // 18\n                                                                                                                  // 19\n  return Meteor.users.findOne(Streamy.userId(socket));                                                            // 20\n};                                                                                                                // 21\n                                                                                                                  // 22\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// packages/yuukan:streamy/lib/startup.js                                                                         //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n/**                                                                                                               // 1\n * When the application starts up, register handlers!                                                             // 2\n */                                                                                                               // 3\nMeteor.startup(function onStartup() {                                                                             // 4\n  Streamy.init();                                                                                                 // 5\n});                                                                                                               // 6\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['yuukan:streamy'] = {}, {\n  Streamy: Streamy\n});\n\n})();\n","servePath":"/packages/yuukan_streamy.js","sourceMap":{"version":3,"sources":["/packages/yuukan_streamy/packages/yuukan_streamy.js"],"names":[],"mappingsfile":"/packages/yuukan_streamy.js","sourcesContent":["(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// packages/yuukan:streamy/lib/namespaces.js                                                                      //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\nStreamy = {};                                                                                                     // 1\nStreamy.BroadCasts = {};                                                                                          // 2\nStreamy.DirectMessages = {};                                                                                      // 3\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// packages/yuukan:streamy/lib/core/core.js                                                                       //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\nvar handlers = {};                                                                                                // 1\nvar connect_handlers = [];                                                                                        // 2\nvar disconnect_handlers = [];                                                                                     // 3\n                                                                                                                  // 4\n// -------------------------------------------------------------------------- //                                  // 5\n// --------------------- Overriden by client/server ------------------------- //                                  // 6\n// -------------------------------------------------------------------------- //                                  // 7\n                                                                                                                  // 8\n/**                                                                                                               // 9\n * Init streamy, attach base handlers in client/server                                                            // 10\n */                                                                                                               // 11\nStreamy.init = function() { };                                                                                    // 12\n                                                                                                                  // 13\n/**                                                                                                               // 14\n * Write the message on the socket                                                                                // 15\n * @param {String} data Data stringified                                                                          // 16\n * @param {Object} to (Server side) Which socket should we use                                                    // 17\n */                                                                                                               // 18\nStreamy._write = function(data, to) { };                                                                          // 19\n                                                                                                                  // 20\n// -------------------------------------------------------------------------- //                                  // 21\n// ------------------------------ Accessors --------------------------------- //                                  // 22\n// -------------------------------------------------------------------------- //                                  // 23\n                                                                                                                  // 24\n/**                                                                                                               // 25\n * Retrieve connect handlers                                                                                      // 26\n */                                                                                                               // 27\nStreamy.connectHandlers = function() {                                                                            // 28\n  return connect_handlers;                                                                                        // 29\n};                                                                                                                // 30\n                                                                                                                  // 31\n/**                                                                                                               // 32\n * Retrieve disconnect handlers                                                                                   // 33\n */                                                                                                               // 34\nStreamy.disconnectHandlers = function() {                                                                         // 35\n  return disconnect_handlers;                                                                                     // 36\n};                                                                                                                // 37\n                                                                                                                  // 38\n/**                                                                                                               // 39\n * Retrieve all handlers or the one for the given message                                                         // 40\n * @param {String} message Optional, if defined, returns the handler for this specific messsage                   // 41\n */                                                                                                               // 42\nStreamy.handlers = function(message) {                                                                            // 43\n  if(message) {                                                                                                   // 44\n    var handler = handlers[message];                                                                              // 45\n    if(!handler)                                                                                                  // 46\n      handler = function() {};                                                                                    // 47\n                                                                                                                  // 48\n    return handler;                                                                                               // 49\n  }                                                                                                               // 50\n                                                                                                                  // 51\n  return handlers;                                                                                                // 52\n};                                                                                                                // 53\n                                                                                                                  // 54\n// -------------------------------------------------------------------------- //                                  // 55\n// -------------------------- Common interface ------------------------------ //                                  // 56\n// -------------------------------------------------------------------------- //                                  // 57\n                                                                                                                  // 58\n/**                                                                                                               // 59\n * Apply a specific prefix to avoid name conflicts                                                                // 60\n * @param {String} value Base value                                                                               // 61\n * @return {String} The base value prefixed                                                                       // 62\n */                                                                                                               // 63\nStreamy._applyPrefix = function(value) {                                                                          // 64\n  return 'streamy$' + value;                                                                                      // 65\n};                                                                                                                // 66\n                                                                                                                  // 67\n/**                                                                                                               // 68\n * Register an handler for the given message type                                                                 // 69\n * @param {String} message Message name to handle                                                                 // 70\n * @param {Function} callback Callback to call when this message is received                                      // 71\n */                                                                                                               // 72\nStreamy.on = function(message, callback) {                                                                        // 73\n  message = Streamy._applyPrefix(message);                                                                        // 74\n  handlers[message] = Meteor.bindEnvironment(callback);                                                           // 75\n};                                                                                                                // 76\n                                                                                                                  // 77\n/**                                                                                                               // 78\n * Adds an handler for the connection success                                                                     // 79\n * @param {Function} callback Callback to call upon connection                                                    // 80\n */                                                                                                               // 81\nStreamy.onConnect = function(callback) {                                                                          // 82\n  connect_handlers.push(Meteor.bindEnvironment(callback));                                                        // 83\n};                                                                                                                // 84\n                                                                                                                  // 85\n/**                                                                                                               // 86\n * Adds an handler for the disconnection                                                                          // 87\n * @param {Function} callback Callback to call upon disconnect                                                    // 88\n */                                                                                                               // 89\nStreamy.onDisconnect = function(callback) {                                                                       // 90\n  disconnect_handlers.push(Meteor.bindEnvironment(callback));                                                     // 91\n};                                                                                                                // 92\n                                                                                                                  // 93\n/**                                                                                                               // 94\n * Emits a message with the given name and associated data                                                        // 95\n * @param {String} message Message name to emit                                                                   // 96\n * @param {Object} data Data to send                                                                              // 97\n * @param {Socket} to (Server side only) which socket we should use                                               // 98\n */                                                                                                               // 99\nStreamy.emit = function(message, data, to) {                                                                      // 100\n  data = data || {};                                                                                              // 101\n  message = Streamy._applyPrefix(message);                                                                        // 102\n                                                                                                                  // 103\n  check(message, String);                                                                                         // 104\n  check(data, Object);                                                                                            // 105\n                                                                                                                  // 106\n  data.msg = message;                                                                                             // 107\n                                                                                                                  // 108\n  Streamy._write(JSON.stringify(data), to);                                                                       // 109\n};                                                                                                                // 110\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// packages/yuukan:streamy/lib/direct_messages/direct_messages.js                                                 //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n// -------------------------------------------------------------------------- //                                  // 1\n// --------------------- Overriden by client/server ------------------------- //                                  // 2\n// -------------------------------------------------------------------------- //                                  // 3\n                                                                                                                  // 4\n/**                                                                                                               // 5\n * Gets the wrapper for the emit returned by Streamy.sessions(sid)                                                // 6\n * @param {String|Array} sid Session id(s)                                                                        // 7\n * @return  {Function}  Function which will be called by emit on the session                                      // 8\n */                                                                                                               // 9\nStreamy._sessionsEmit = function(sid) { };                                                                        // 10\n                                                                                                                  // 11\n/**                                                                                                               // 12\n * Gets the wrapper for the emit returned by Streamy.sessionsForUsers(sid)                                        // 13\n * @param {String|Array} uid User id(s)                                                                           // 14\n * @return  {Function}  Function which will be called by emit on the session                                      // 15\n */                                                                                                               // 16\nStreamy._sessionsForUsersEmit = function(uid) { };                                                                // 17\n                                                                                                                  // 18\n// -------------------------------------------------------------------------- //                                  // 19\n// -------------------------- Common interface ------------------------------ //                                  // 20\n// -------------------------------------------------------------------------- //                                  // 21\n                                                                                                                  // 22\n/**                                                                                                               // 23\n * Returns an object for the targetted session id(s) which contains an emit method                                // 24\n * @param {String|Array} sid Session id(s)                                                                        // 25\n * @return  {Object}  Object with an emit function                                                                // 26\n */                                                                                                               // 27\nStreamy.sessions = function(sid) {                                                                                // 28\n  return {                                                                                                        // 29\n    emit: Streamy._sessionsEmit(sid)                                                                              // 30\n  };                                                                                                              // 31\n};                                                                                                                // 32\n                                                                                                                  // 33\n/**                                                                                                               // 34\n * Returns an object for the targetted user id(s) which contains an emit method                                   // 35\n * @param {String|Array} uid User id(s)                                                                           // 36\n * @return  {Object}  Object with an emit function                                                                // 37\n */                                                                                                               // 38\nStreamy.sessionsForUsers = function(uid) {                                                                        // 39\n  return {                                                                                                        // 40\n    emit: Streamy._sessionsForUsersEmit(uid)                                                                      // 41\n  }                                                                                                               // 42\n};                                                                                                                // 43\n                                                                                                                  // 44\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// packages/yuukan:streamy/lib/broadcasts/broadcasts.js                                                           //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n// -------------------------------------------------------------------------- //                                  // 1\n// --------------------- Overriden by client/server ------------------------- //                                  // 2\n// -------------------------------------------------------------------------- //                                  // 3\n                                                                                                                  // 4\n/**                                                                                                               // 5\n * Returns an object for the targetted session id which contains an emit method                                   // 6\n * @param {String} message Message to emit                                                                        // 7\n * @param {Object} data Data to send                                                                              // 8\n * @param {Array|String} except Which sid should we exclude from the broadcast message                            // 9\n */                                                                                                               // 10\nStreamy.broadcast = function(message, data, except) { };                                                          // 11\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// packages/yuukan:streamy/lib/utils/utils.js                                                                     //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n// -------------------------------------------------------------------------- //                                  // 1\n// --------------------- Overriden by client/server ------------------------- //                                  // 2\n// -------------------------------------------------------------------------- //                                  // 3\n                                                                                                                  // 4\n/**                                                                                                               // 5\n * Retrieve the connection id                                                                                     // 6\n * @param  {Socket} socket On server, should be given to determine the concerned connection                       // 7\n * @return {String}        The connection id                                                                      // 8\n */                                                                                                               // 9\nStreamy.id = function(socket) {};                                                                                 // 10\n                                                                                                                  // 11\n/**                                                                                                               // 12\n * Retrieve the user id                                                                                           // 13\n * @param {Socket} socket On server, should be given to determine the concerned user                              // 14\n */                                                                                                               // 15\nStreamy.userId = function(socket) {};                                                                             // 16\n                                                                                                                  // 17\n/**                                                                                                               // 18\n * Retrieve the user                                                                                              // 19\n * @param {Socket} socket On server, should be given to determine the concerned user                              // 20\n */                                                                                                               // 21\nStreamy.user = function(socket) {};                                                                               // 22\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// packages/yuukan:streamy/lib/core/core_server.js                                                                //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\nvar sessions = {};                                                                                                // 1\n                                                                                                                  // 2\n// -------------------------------------------------------------------------- //                                  // 3\n// ------------------------------- Accessors -------------------------------- //                                  // 4\n// -------------------------------------------------------------------------- //                                  // 5\n                                                                                                                  // 6\n/**                                                                                                               // 7\n * Contains reactive variables for each connection id/user id                                                     // 8\n * @type {Object}                                                                                                 // 9\n */                                                                                                               // 10\nStreamy._usersId = {};                                                                                            // 11\n                                                                                                                  // 12\n/**                                                                                                               // 13\n * Retrieve server connected sockets or a subset                                                                  // 14\n * @param {String|Array} sid Optional, socket id or ids to retrieve                                               // 15\n * @return  {Object} If sid is provided, it will returns an object with a send method and _sockets array of sockets, else, it will returns all sockets\n */                                                                                                               // 17\nStreamy.sockets = function(sid) {                                                                                 // 18\n                                                                                                                  // 19\n  if(sid) {                                                                                                       // 20\n    sid = _.isArray(sid) ? sid : [sid];                                                                           // 21\n    var sockets = [];                                                                                             // 22\n                                                                                                                  // 23\n    _.each(sid, function(session_id) {                                                                            // 24\n      var sock = sessions[session_id];                                                                            // 25\n                                                                                                                  // 26\n      if(sock)                                                                                                    // 27\n        sockets.push(sock);                                                                                       // 28\n    });                                                                                                           // 29\n                                                                                                                  // 30\n    return {                                                                                                      // 31\n      _sockets: sockets,                                                                                          // 32\n      send: function(data) {                                                                                      // 33\n        _.each(sockets, function(socket) {                                                                        // 34\n          socket.send(data);                                                                                      // 35\n        });                                                                                                       // 36\n      }                                                                                                           // 37\n    }                                                                                                             // 38\n  }                                                                                                               // 39\n                                                                                                                  // 40\n  return sessions;                                                                                                // 41\n};                                                                                                                // 42\n                                                                                                                  // 43\n/**                                                                                                               // 44\n * Retrieve server connected sockets or a subset                                                                  // 45\n * @param {String|Array} uid Optional, user id or ids to retrieve                                                 // 46\n * @return  {Object} If uid is provided, it will returns an object with a send method and _sockets array of sockets, else, it will returns all sockets\n */                                                                                                               // 48\nStreamy.socketsForUsers = function(uid) {                                                                         // 49\n                                                                                                                  // 50\n  if(uid) {                                                                                                       // 51\n    uid = _.isArray(uid) ? uid : [uid];                                                                           // 52\n                                                                                                                  // 53\n    var sockets = _.filter(Streamy.sockets(), function(socket) {                                                  // 54\n      return uid.indexOf(socket._meteorSession.userId) !== -1;                                                    // 55\n    });                                                                                                           // 56\n                                                                                                                  // 57\n    return {                                                                                                      // 58\n      _sockets: sockets,                                                                                          // 59\n      send: function(data) {                                                                                      // 60\n        _.each(sockets, function(socket) {                                                                        // 61\n          socket.send(data);                                                                                      // 62\n        });                                                                                                       // 63\n      }                                                                                                           // 64\n    }                                                                                                             // 65\n  }                                                                                                               // 66\n                                                                                                                  // 67\n  return sessions;                                                                                                // 68\n                                                                                                                  // 69\n};                                                                                                                // 70\n                                                                                                                  // 71\n// -------------------------------------------------------------------------- //                                  // 72\n// ------------------------------- Overrides -------------------------------- //                                  // 73\n// -------------------------------------------------------------------------- //                                  // 74\n                                                                                                                  // 75\nStreamy.init = function() {                                                                                       // 76\n  var self = this;                                                                                                // 77\n                                                                                                                  // 78\n  // If accounts package is installed, register for successful login attempts                                     // 79\n  if(typeof(Accounts) !== 'undefined' ) {                                                                         // 80\n    Accounts.onLogin(function onLoggedIn(data) {                                                                  // 81\n      Streamy._usersId[data.connection.id].set(data.user._id);                                                    // 82\n    });                                                                                                           // 83\n  }                                                                                                               // 84\n                                                                                                                  // 85\n  // When a new connection has been received                                                                      // 86\n  Meteor.default_server.stream_server.register(function onNewConnected(socket) {                                  // 87\n    var handlers_registered = false;                                                                              // 88\n                                                                                                                  // 89\n    // On closed, call disconnect handlers                                                                        // 90\n    socket.on('close', function onSocketClosed() {                                                                // 91\n      if(handlers_registered) {                                                                                   // 92\n        var sid = Streamy.id(socket);                                                                             // 93\n                                                                                                                  // 94\n        delete sessions[sid];                                                                                     // 95\n        delete Streamy._usersId[sid];                                                                             // 96\n                                                                                                                  // 97\n        _.each(self.disconnectHandlers(), function forEachDisconnectHandler(cb) {                                 // 98\n          cb.call(self, socket);                                                                                  // 99\n        });                                                                                                       // 100\n      }                                                                                                           // 101\n    });                                                                                                           // 102\n                                                                                                                  // 103\n    // This little trick is used to register protocol handlers on the                                             // 104\n    // socket._meteorSession object, so we need it to be set                                                      // 105\n    socket.on('data', function onSocketData(raw_data) {                                                           // 106\n                                                                                                                  // 107\n      // Since we doesn't have a Accounts.onLogout callback, we must use this little trick, will be replaced when a proper callback is added\n      if(JSON.parse(raw_data).method === 'logout' && socket.__sid) {                                              // 109\n        Streamy._usersId[Streamy.id(socket)].set(null);                                                           // 110\n      }                                                                                                           // 111\n                                                                                                                  // 112\n      // Only if the socket as a meteor session                                                                   // 113\n      if(!handlers_registered && socket._meteorSession) {                                                         // 114\n                                                                                                                  // 115\n        // Store the meteorSesion id in an inner property since _meteorSession will be deleted upon socket closed // 116\n        socket.__sid = socket._meteorSession.id;                                                                  // 117\n                                                                                                                  // 118\n        var sid = Streamy.id(socket);                                                                             // 119\n                                                                                                                  // 120\n        handlers_registered = true;                                                                               // 121\n                                                                                                                  // 122\n        sessions[sid] = socket;                                                                                   // 123\n        Streamy._usersId[sid] = new ReactiveVar(null);                                                            // 124\n                                                                                                                  // 125\n        // Call connection handlers                                                                               // 126\n        _.each(self.connectHandlers(), function forEachConnectHandler(cb) {                                       // 127\n          cb.call(self, socket);                                                                                  // 128\n        });                                                                                                       // 129\n                                                                                                                  // 130\n        // Add each handler to the list of protocol handlers                                                      // 131\n        _.each(self.handlers(), function forEachHandler(cb, name) {                                               // 132\n          if(!socket._meteorSession.protocol_handlers[name]) {                                                    // 133\n            socket._meteorSession.protocol_handlers[name] = function onMessage(raw_msg) {                         // 134\n              delete raw_msg.msg; // Remove msg field                                                             // 135\n              cb.call(self, raw_msg, this.socket);                                                                // 136\n            };                                                                                                    // 137\n          }                                                                                                       // 138\n        });                                                                                                       // 139\n      }                                                                                                           // 140\n    });                                                                                                           // 141\n  });                                                                                                             // 142\n};                                                                                                                // 143\n                                                                                                                  // 144\nStreamy._write = function(data, to) {                                                                             // 145\n  if(to)                                                                                                          // 146\n    to.send(data);                                                                                                // 147\n};                                                                                                                // 148\n                                                                                                                  // 149\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// packages/yuukan:streamy/lib/direct_messages/direct_messages_server.js                                          //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n// -------------------------------------------------------------------------- //                                  // 1\n// ------------------------------ Allow/deny -------------------------------- //                                  // 2\n// -------------------------------------------------------------------------- //                                  // 3\n                                                                                                                  // 4\n/**                                                                                                               // 5\n * Wether or not the direct messages is allowed                                                                   // 6\n * @param {Object} data Data of the message                                                                       // 7\n * @param {Socket} from From socket                                                                               // 8\n * @param {Object} to Special object as returned by Streamy.sockets                                               // 9\n */                                                                                                               // 10\nStreamy.DirectMessages.allow = function(data, from, to) {                                                         // 11\n  return true;                                                                                                    // 12\n};                                                                                                                // 13\n                                                                                                                  // 14\n// -------------------------------------------------------------------------- //                                  // 15\n// -------------------------------- Handlers -------------------------------- //                                  // 16\n// -------------------------------------------------------------------------- //                                  // 17\n                                                                                                                  // 18\n/**                                                                                                               // 19\n * Attach the direct message handler                                                                              // 20\n * @param {Object} data Data object                                                                               // 21\n * @param {Socket} from Socket emitter                                                                            // 22\n */                                                                                                               // 23\nStreamy.on('__direct__', function(data, from) {                                                                   // 24\n                                                                                                                  // 25\n  // Check for sanity                                                                                             // 26\n  if(!data.__msg || !data.__data)                                                                                 // 27\n    return;                                                                                                       // 28\n                                                                                                                  // 29\n  var to_socks = null;                                                                                            // 30\n                                                                                                                  // 31\n  if(data.__to_users)                                                                                             // 32\n    to_socks = Streamy.socketsForUsers(data.__to_users);                                                          // 33\n  else if(data.__to)                                                                                              // 34\n    to_socks = Streamy.sockets(data.__to);                                                                        // 35\n                                                                                                                  // 36\n  if(!to_socks)                                                                                                   // 37\n    return;                                                                                                       // 38\n                                                                                                                  // 39\n  // Check if the server allows this direct message                                                               // 40\n  if(!Streamy.DirectMessages.allow(data, from, to_socks))                                                         // 41\n      return;                                                                                                     // 42\n                                                                                                                  // 43\n  // Attach the sender ID to the inner data                                                                       // 44\n  data.__data.__from = Streamy.id(from);                                                                          // 45\n                                                                                                                  // 46\n  // And then emit the message                                                                                    // 47\n  Streamy.emit(data.__msg, data.__data, to_socks);                                                                // 48\n});                                                                                                               // 49\n                                                                                                                  // 50\n// -------------------------------------------------------------------------- //                                  // 51\n// ------------------------------- Overrides -------------------------------- //                                  // 52\n// -------------------------------------------------------------------------- //                                  // 53\n                                                                                                                  // 54\nStreamy._sessionsEmit = function(sid) {                                                                           // 55\n  var socket = _.isObject(sid) ? sid : Streamy.sockets(sid);                                                      // 56\n                                                                                                                  // 57\n  return function(msg, data) {                                                                                    // 58\n    Streamy.emit(msg, data, socket);                                                                              // 59\n  };                                                                                                              // 60\n};                                                                                                                // 61\n                                                                                                                  // 62\nStreamy._sessionsForUsersEmit = function(uid) {                                                                   // 63\n  uid = _.isArray(uid) ? uid : [uid];                                                                             // 64\n  var sockets = Streamy.socketsForUsers(uid);                                                                     // 65\n                                                                                                                  // 66\n  return function(msg, data) {                                                                                    // 67\n    Streamy.emit(msg, data, sockets);                                                                             // 68\n  };                                                                                                              // 69\n};                                                                                                                // 70\n                                                                                                                  // 71\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// packages/yuukan:streamy/lib/broadcasts/broadcasts_server.js                                                    //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n// -------------------------------------------------------------------------- //                                  // 1\n// ------------------------------ Allow/deny -------------------------------- //                                  // 2\n// -------------------------------------------------------------------------- //                                  // 3\n                                                                                                                  // 4\n/**                                                                                                               // 5\n * Wether or not the broadcast is allowed                                                                         // 6\n * @param {Object} data Data of the message                                                                       // 7\n * @param {Socket} from From socket                                                                               // 8\n */                                                                                                               // 9\nStreamy.BroadCasts.allow = function(data, from) {                                                                 // 10\n  return true;                                                                                                    // 11\n};                                                                                                                // 12\n                                                                                                                  // 13\n// -------------------------------------------------------------------------- //                                  // 14\n// -------------------------------- Handlers -------------------------------- //                                  // 15\n// -------------------------------------------------------------------------- //                                  // 16\n                                                                                                                  // 17\n/**                                                                                                               // 18\n * Attach the broadcast message handler                                                                           // 19\n * @param {Object} data Data object                                                                               // 20\n * @param {Socket} from Socket emitter                                                                            // 21\n */                                                                                                               // 22\nStreamy.on('__broadcast__', function(data, from) {                                                                // 23\n                                                                                                                  // 24\n  // Check for sanity                                                                                             // 25\n  if(!data.__msg || !data.__data)                                                                                 // 26\n    return;                                                                                                       // 27\n                                                                                                                  // 28\n  // Check if the server allows this direct message                                                               // 29\n  if(!Streamy.BroadCasts.allow(data, from))                                                                       // 30\n      return;                                                                                                     // 31\n                                                                                                                  // 32\n  // Attach the sender ID to the inner data                                                                       // 33\n  data.__data.__from = Streamy.id(from);                                                                          // 34\n                                                                                                                  // 35\n  // And then emit the message                                                                                    // 36\n  Streamy.broadcast(data.__msg, data.__data, data.__except);                                                      // 37\n});                                                                                                               // 38\n                                                                                                                  // 39\n// -------------------------------------------------------------------------- //                                  // 40\n// ------------------------------- Overrides -------------------------------- //                                  // 41\n// -------------------------------------------------------------------------- //                                  // 42\n                                                                                                                  // 43\nStreamy.broadcast = function(message, data, except) {                                                             // 44\n  if(!_.isArray(except))                                                                                          // 45\n    except = [except];                                                                                            // 46\n                                                                                                                  // 47\n  _.each(Streamy.sockets(), function(sock) {                                                                      // 48\n    if(except.indexOf(Streamy.id(sock)) !== -1)                                                                   // 49\n      return;                                                                                                     // 50\n                                                                                                                  // 51\n    Streamy.emit(message, data, sock);                                                                            // 52\n  });                                                                                                             // 53\n};                                                                                                                // 54\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// packages/yuukan:streamy/lib/utils/utils_server.js                                                              //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n// -------------------------------------------------------------------------- //                                  // 1\n// ------------------------------- Overrides -------------------------------- //                                  // 2\n// -------------------------------------------------------------------------- //                                  // 3\n                                                                                                                  // 4\nStreamy.id = function(socket) {                                                                                   // 5\n  return socket.__sid;                                                                                            // 6\n};                                                                                                                // 7\n                                                                                                                  // 8\nStreamy.userId = function(socket) {                                                                               // 9\n  if(!socket)                                                                                                     // 10\n    throw new Meteor.Error(500, 'You should provides a socket server-side');                                      // 11\n                                                                                                                  // 12\n  return Streamy._usersId[Streamy.id(socket)].get();                                                              // 13\n};                                                                                                                // 14\n                                                                                                                  // 15\nStreamy.user = function(socket) {                                                                                 // 16\n  if(!Meteor.users)                                                                                               // 17\n    throw new Meteor.Error(500, 'Could not retrieve user, is accounts-base installed?');                          // 18\n                                                                                                                  // 19\n  return Meteor.users.findOne(Streamy.userId(socket));                                                            // 20\n};                                                                                                                // 21\n                                                                                                                  // 22\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// packages/yuukan:streamy/lib/startup.js                                                                         //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n/**                                                                                                               // 1\n * When the application starts up, register handlers!                                                             // 2\n */                                                                                                               // 3\nMeteor.startup(function onStartup() {                                                                             // 4\n  Streamy.init();                                                                                                 // 5\n});                                                                                                               // 6\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}}]