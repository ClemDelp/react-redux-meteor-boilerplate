{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"babel-polyfill","imported":[],"specifiers":[]},{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"redux","imported":["applyMiddleware","compose","createStore"],"specifiers":[{"kind":"named","imported":"applyMiddleware","local":"applyMiddleware"},{"kind":"named","imported":"compose","local":"compose"},{"kind":"named","imported":"createStore","local":"createStore"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"./reducers","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"rootReducer"}]},{"source":"./containers/Root","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Root"}]},{"source":"react-dom","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"ReactDOM"}]},{"source":"./reducers/demo","imported":["addScore"],"specifiers":[{"kind":"named","imported":"addScore","local":"addScore"}]},{"source":"./sagas","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"rootSaga"}]},{"source":"redux-saga","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"createSagaMiddleware"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/main.jsx","filenameRelative":"/client/main.jsx","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/main.jsx.map","sourceFileName":"/client/main.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"main"},"ignored":false,"code":"module.import('babel-polyfill');var React;module.import('react',{\"default\":function(v){React=v}});var applyMiddleware,compose,createStore;module.import('redux',{\"applyMiddleware\":function(v){applyMiddleware=v},\"compose\":function(v){compose=v},\"createStore\":function(v){createStore=v}});var Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});var rootReducer;module.import('./reducers',{\"default\":function(v){rootReducer=v}});var Root;module.import('./containers/Root',{\"default\":function(v){Root=v}});var ReactDOM;module.import('react-dom',{\"default\":function(v){ReactDOM=v}});var addScore;module.import('./reducers/demo',{\"addScore\":function(v){addScore=v}});var rootSaga;module.import('./sagas',{\"default\":function(v){rootSaga=v}});var createSagaMiddleware;module.import('redux-saga',{\"default\":function(v){createSagaMiddleware=v}});// IMPORT\n\n\n\n\n\n\n\n\n\n//\n// SAGA\n//\n\n\nvar sagaMiddleware = createSagaMiddleware();\n\n//\n// STORE\n//\n\nvar store = createStore(rootReducer, compose(applyMiddleware(sagaMiddleware), window.devToolsExtension ? window.devToolsExtension() : function (f) {\n  return f;\n}));\nsagaMiddleware.run(rootSaga);\n\n//\n// APP\n//\n\nMeteor.startup(function () {\n  // mount app\n  var reactDivElement = document.getElementById('render-target');\n  if (reactDivElement) {\n    ReactDOM.render(React.createElement(Root, { store: store }), reactDivElement);\n  }\n});\n\n//\n// STREAMS\n//\n\nStreamy.on('scoreStream', function (score) {\n  store.dispatch(addScore(score.y));\n});\n\n//\n// DEBUGS\n// Since we don't want all those debug messages\nMeteor._debug = function (super_meteor_debug) {\n  return function (error, info) {\n    if (!(info && _.has(info, 'msg'))) super_meteor_debug(error, info);\n  };\n}(Meteor._debug);","ast":null,"map":{"version":3,"sources":["/client/main.jsx"],"names":[],"mappings":";AACA,OAAO,gBAAP;AACA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,eAAT,EAA0B,OAA1B,EAAmC,WAAnC,QAAsD,OAAtD;AACA,SAAS,MAAT,QAAuB,eAAvB;AACA,OAAO,WAAP,MAAwB,YAAxB;AACA,OAAO,IAAP,MAAiB,mBAAjB;AACA,OAAO,QAAP,MAAqB,WAArB;AACA,SAAQ,QAAR,QAAuB,iBAAvB;;;;;AAKA,OAAO,QAAP,MAAqB,SAArB;AACA,OAAO,oBAAP,MAAiC,YAAjC;AACA,IAAM,iBAAiB,sBAAvB;;;;;;AAMA,IAAM,QAAQ,YACZ,WADY,EAEZ,QACE,gBAAgB,cAAhB,CADF,EAEE,OAAO,iBAAP,GACE,OAAO,iBAAP,EADF,GAEE;AAAA,SAAK,CAAL;AAAA,CAJJ,CAFY,CAAd;AASA,eAAe,GAAf,CAAmB,QAAnB;;;;;;AAMA,OAAO,OAAP,CAAe,YAAM;;AAEpB,MAAM,kBAAkB,SAAS,cAAT,CAAwB,eAAxB,CAAxB;AACA,MAAI,eAAJ,EAAqB;AACpB,aAAS,MAAT,CAAgB,oBAAC,IAAD,IAAM,OAAO,KAAb,GAAhB,EAAwC,eAAxC;AACA;AACD,CAND;;;;;;AAYA,QAAQ,EAAR,CAAW,aAAX,EAA0B,UAAU,KAAV,EAAiB;AACzC,QAAM,QAAN,CAAe,SAAS,MAAM,CAAf,CAAf;AACD,CAFD;;;;;AAOA,OAAO,MAAP,GAAiB,UAAU,kBAAV,EAA8B;AAC7C,SAAO,UAAU,KAAV,EAAiB,IAAjB,EAAuB;AAC5B,QAAI,EAAE,QAAQ,EAAE,GAAF,CAAM,IAAN,EAAY,KAAZ,CAAV,CAAJ,EACE,mBAAmB,KAAnB,EAA0B,IAA1B;AACH,GAHD;AAID,CALe,CAKb,OAAO,MALM,CAAhB","file":"/client/main.jsx.map","sourcesContent":["// IMPORT\nimport 'babel-polyfill'\nimport React from 'react'\nimport { applyMiddleware, compose, createStore } from 'redux'\nimport { Meteor } from 'meteor/meteor'\nimport rootReducer from './reducers'\nimport Root from './containers/Root'\nimport ReactDOM from 'react-dom'\nimport {addScore} from './reducers/demo'\n\n//\n// SAGA\n//\nimport rootSaga from './sagas'\nimport createSagaMiddleware from 'redux-saga'\nconst sagaMiddleware = createSagaMiddleware()\n\n//\n// STORE\n//\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(sagaMiddleware),\n    window.devToolsExtension\n    ? window.devToolsExtension()\n    : f => f\n  )\n)\nsagaMiddleware.run(rootSaga)\n\n//\n// APP\n//\n\nMeteor.startup(() => {\n  // mount app\n\tconst reactDivElement = document.getElementById('render-target')\n\tif (reactDivElement) {\n\t\tReactDOM.render(<Root store={store} />, reactDivElement)\n\t}\n})\n\n//\n// STREAMS\n//\n\nStreamy.on('scoreStream', function (score) {\n  store.dispatch(addScore(score.y))\n})\n\n//\n// DEBUGS\n// Since we don't want all those debug messages\nMeteor._debug = (function (super_meteor_debug) {\n  return function (error, info) {\n    if (!(info && _.has(info, 'msg')))\n      super_meteor_debug(error, info)\n  }\n})(Meteor._debug);\n"]},"hash":"5fe99e969ac4846a8edfc8a2d9d922ab46f5c8db"}
