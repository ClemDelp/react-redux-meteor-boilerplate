{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]}],"exports":{"exported":["PlotlyChart"],"specifiers":[{"kind":"local","local":"PlotlyChart","exported":"default"}]}}},"options":{"filename":"/client/demo/Plotly.js","filenameRelative":"/client/demo/Plotly.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/demo/Plotly.js.map","sourceFileName":"/client/demo/Plotly.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"Plotly"},"ignored":false,"code":"var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{\"default\":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{\"default\":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{\"default\":function(v){_inherits=v}});var React;module.import('react',{\"default\":function(v){React=v}});\n\n\n// MODULE\n\n\n\n// COMPONENT\n\nvar PlotlyChart = function (_React$Component) {\n  _inherits(PlotlyChart, _React$Component);\n\n  function PlotlyChart(props) {\n    _classCallCheck(this, PlotlyChart);\n\n    return _possibleConstructorReturn(this, _React$Component.call(this, props));\n  }\n\n  // first time\n\n\n  PlotlyChart.prototype.componentDidMount = function () {\n    function componentDidMount() {\n      var y = this.props.y;\n      var trace = {\n        name: 'data',\n        x: this.props.x,\n        y: y,\n        type: 'scatter',\n        opacity: 0.75,\n        marker: { color: this.props.color }\n      };\n      var data = [trace];\n      var layout = {\n        title: this.props.name,\n        showlegend: true,\n        xaxis: {\n          autorange: true\n        },\n        yaxis: {\n          autorange: true\n        }\n      };\n      if (this.props.type) {\n        layout.xaxis.type = this.props.type;\n        layout.yaxis.type = this.props.type;\n      }\n      Plotly.newPlot(this.refs.graphViz, data, layout);\n    }\n\n    return componentDidMount;\n  }();\n\n  PlotlyChart.prototype.range = function () {\n    function range(start, end) {\n      var foo = [];\n      for (var i = start; i < end; i++) {\n        foo.push(i);\n      }\n      return foo;\n    }\n\n    return range;\n  }();\n  // after first time\n\n\n  PlotlyChart.prototype.componentDidUpdate = function () {\n    function componentDidUpdate() {\n      console.log('props', this.props);\n      // const trace = this.getTrace()\n      var index = this.props.y.length;\n      var x = this.props.x[index - 1];\n      var y = this.props.y[index - 1];\n      this.refs.graphViz.data[0].x.push(x);\n      this.refs.graphViz.data[0].y.push(y);\n      Plotly.redraw(this.refs.graphViz);\n    }\n\n    return componentDidUpdate;\n  }();\n  // Does'nt call the render when state change\n\n\n  PlotlyChart.prototype.componentWillReceiveProps = function () {\n    function componentWillReceiveProps(nextProps, nextContext) {}\n\n    return componentWillReceiveProps;\n  }();\n\n  PlotlyChart.prototype.render = function () {\n    function render() {\n      return React.createElement('div', { ref: 'graphViz' });\n    }\n\n    return render;\n  }();\n\n  return PlotlyChart;\n}(React.Component);\n\nmodule.export(\"default\",exports.default=(PlotlyChart));","ast":null,"map":{"version":3,"sources":["/client/demo/Plotly.js"],"names":[],"mappings":";;;;;AAEA,OAAO,KAAP,MAAkB,OAAlB;;;;IAGqB,W;;;AACnB,uBAAa,KAAb,EAAoB;AAAA;;AAAA,4CAClB,4BAAM,KAAN,CADkB;AAEnB;;;;;wBAGD,iB;iCAAqB;AACnB,UAAM,IAAI,KAAK,KAAL,CAAW,CAArB;AACA,UAAI,QAAQ;AACV,cAAM,MADI;AAEV,WAAG,KAAK,KAAL,CAAW,CAFJ;AAGV,WAAG,CAHO;AAIV,cAAM,SAJI;AAKV,iBAAS,IALC;AAMV,gBAAQ,EAAC,OAAO,KAAK,KAAL,CAAW,KAAnB;AANE,OAAZ;AAQA,UAAI,OAAO,CAAC,KAAD,CAAX;AACA,UAAI,SAAS;AACX,eAAO,KAAK,KAAL,CAAW,IADP;AAEX,oBAAY,IAFD;AAGX,eAAO;AACL,qBAAW;AADN,SAHI;AAMX,eAAO;AACL,qBAAW;AADN;AANI,OAAb;AAUA,UAAI,KAAK,KAAL,CAAW,IAAf,EAAqB;AACnB,eAAO,KAAP,CAAa,IAAb,GAAoB,KAAK,KAAL,CAAW,IAA/B;AACA,eAAO,KAAP,CAAa,IAAb,GAAoB,KAAK,KAAL,CAAW,IAA/B;AACD;AACD,aAAO,OAAP,CAAe,KAAK,IAAL,CAAU,QAAzB,EAAmC,IAAnC,EAAyC,MAAzC;AACD;;;;;wBAED,K;mBAAO,K,EAAO,G,EAAK;AACjB,UAAI,MAAM,EAAV;AACA,WAAK,IAAI,IAAI,KAAb,EAAoB,IAAI,GAAxB,EAA6B,GAA7B,EAAkC;AAChC,YAAI,IAAJ,CAAS,CAAT;AACD;AACD,aAAO,GAAP;AACD;;;;;;;wBAED,kB;kCAAsB;AACpB,cAAQ,GAAR,CAAY,OAAZ,EAAoB,KAAK,KAAzB;;AAEA,UAAM,QAAQ,KAAK,KAAL,CAAW,CAAX,CAAa,MAA3B;AACA,UAAM,IAAI,KAAK,KAAL,CAAW,CAAX,CAAa,QAAM,CAAnB,CAAV;AACA,UAAM,IAAI,KAAK,KAAL,CAAW,CAAX,CAAa,QAAM,CAAnB,CAAV;AACA,WAAK,IAAL,CAAU,QAAV,CAAmB,IAAnB,CAAwB,CAAxB,EAA2B,CAA3B,CAA6B,IAA7B,CAAkC,CAAlC;AACA,WAAK,IAAL,CAAU,QAAV,CAAmB,IAAnB,CAAwB,CAAxB,EAA2B,CAA3B,CAA6B,IAA7B,CAAkC,CAAlC;AACA,aAAO,MAAP,CAAc,KAAK,IAAL,CAAU,QAAxB;AACD;;;;;;;wBAED,yB;uCAA2B,S,EAAW,W,EAAa,CAElD;;;;;wBAED,M;sBAAU;AACR,aACE,6BAAK,KAAI,UAAT,GADF;AAGD;;;;;;EA7DsC,MAAM,S;;eAA1B,W","file":"/client/demo/Plotly.js.map","sourcesContent":["// MODULE\n\nimport React from 'react'\n\n// COMPONENT\nexport default class PlotlyChart extends React.Component {\n  constructor (props) {\n    super(props)\n  }\n\n  // first time\n  componentDidMount () {\n    const y = this.props.y\n    var trace = {\n      name: 'data',\n      x: this.props.x,\n      y: y,\n      type: 'scatter',\n      opacity: 0.75,\n      marker: {color: this.props.color}\n    }\n    var data = [trace]\n    var layout = {\n      title: this.props.name,\n      showlegend: true,\n      xaxis: {\n        autorange: true\n      },\n      yaxis: {\n        autorange: true\n      }\n    }\n    if (this.props.type) {\n      layout.xaxis.type = this.props.type\n      layout.yaxis.type = this.props.type\n    }\n    Plotly.newPlot(this.refs.graphViz, data, layout)\n  }\n\n  range (start, end) {\n    var foo = []\n    for (var i = start; i < end; i++) {\n      foo.push(i)\n    }\n    return foo\n  }\n  // after first time\n  componentDidUpdate () {\n    console.log('props',this.props)\n    // const trace = this.getTrace()\n    const index = this.props.y.length\n    const x = this.props.x[index-1]\n    const y = this.props.y[index-1]\n    this.refs.graphViz.data[0].x.push(x)\n    this.refs.graphViz.data[0].y.push(y)\n    Plotly.redraw(this.refs.graphViz)\n  }\n  // Does'nt call the render when state change\n  componentWillReceiveProps (nextProps, nextContext) {\n\n  }\n\n  render () {\n    return (\n      <div ref='graphViz'></div>\n    )\n  }\n}\n"]},"hash":"a1aed9d30122bb92256e63a2cce3949746b12960"}
