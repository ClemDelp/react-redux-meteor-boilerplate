{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"react-redux","imported":["connect"],"specifiers":[{"kind":"named","imported":"connect","local":"connect"}]},{"source":"lodash","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_"}]},{"source":"../actions/api.js","imported":["getTweetStream"],"specifiers":[{"kind":"named","imported":"getTweetStream","local":"getTweetStream"}]},{"source":"../reducers/index","imported":["setCurrentTrend","resetTweets"],"specifiers":[{"kind":"named","imported":"setCurrentTrend","local":"setCurrentTrend"},{"kind":"named","imported":"resetTweets","local":"resetTweets"}]},{"source":"material-ui/Menu","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Menu"}]},{"source":"material-ui/MenuItem","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"MenuItem"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/components/TrendsList.js","filenameRelative":"/client/components/TrendsList.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/components/TrendsList.js.map","sourceFileName":"/client/components/TrendsList.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"TrendsList"},"ignored":false,"code":"var React;module.import('react',{\"default\":function(v){React=v}});var connect;module.import('react-redux',{\"connect\":function(v){connect=v}});var _;module.import('lodash',{\"default\":function(v){_=v}});var getTweetStream;module.import('../actions/api.js',{\"getTweetStream\":function(v){getTweetStream=v}});var setCurrentTrend,resetTweets;module.import('../reducers/index',{\"setCurrentTrend\":function(v){setCurrentTrend=v},\"resetTweets\":function(v){resetTweets=v}});var Menu;module.import('material-ui/Menu',{\"default\":function(v){Menu=v}});var MenuItem;module.import('material-ui/MenuItem',{\"default\":function(v){MenuItem=v}});//\n// MODULE\n//\n\n\n\n\n\n\n// MATERIAL UI\n\n\n\n//\n// COMPONENT\n//\n\nvar TrendsList = function TrendsList(_ref) {\n  var trends = _ref.trends;\n  var setCurrentTrend = _ref.setCurrentTrend;\n  var resetTweets = _ref.resetTweets;\n\n  return React.createElement(\n    Menu,\n    { onChange: function () {\n        function onChange(event, trend) {\n          var promise = new Promise(function (resolve, reject) {\n            resolve(\n            // UPDATE\n            setCurrentTrend(trend));\n          });\n          promise.then(function (trend) {\n            // RESET TWEETS\n            resetTweets();\n            getTweetStream();\n          });\n        }\n\n        return onChange;\n      }() },\n    trends.map(function (trend, index) {\n      return React.createElement(MenuItem, {\n        key: index,\n        value: trend.name,\n        primaryText: trend.name\n      });\n    })\n  );\n};\n\n// CONNECT & EXPORT\nvar mapStateToProps = function mapStateToProps(_ref2) {\n  var trends = _ref2.appReducer.trends;\n\n  var list = _.sortBy(trends.trends, 'tweet_volume').map(function (obj) {\n    return obj;\n  });\n  return { trends: list };\n};\n\nmodule.export(\"default\",exports.default=(connect(mapStateToProps, {\n  setCurrentTrend: setCurrentTrend,\n  resetTweets: resetTweets\n})(TrendsList)));","ast":null,"map":{"version":3,"sources":["/client/components/TrendsList.js"],"names":[],"mappings":";;;AAGA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,OAAT,QAAwB,aAAxB;AACA,OAAO,CAAP,MAAc,QAAd;AACA,SAAQ,cAAR,QAA6B,mBAA7B;AACA,SACE,eADF,EAEE,WAFF,QAGO,mBAHP;;;AAMA,OAAO,IAAP,MAAiB,kBAAjB;AACA,OAAO,QAAP,MAAqB,sBAArB;;;;;;AAMA,IAAM,aAAa,SAAb,UAAa,OAIb;AAAA,MAHJ,MAGI,QAHJ,MAGI;AAAA,MAFJ,eAEI,QAFJ,eAEI;AAAA,MADJ,WACI,QADJ,WACI;;AACJ,SACE;AAAC,QAAD;IAAA,EAAM;AAAU,0BAAC,KAAD,EAAQ,KAAR,EAAkB;AAChC,cAAM,UAAU,IAAI,OAAJ,CAAY,UAAU,OAAV,EAAmB,MAAnB,EAA2B;AACrD;;AAEE,4BAAgB,KAAhB,CAFF;AAID,WALe,CAAhB;AAMA,kBAAQ,IAAR,CAAa,UAAC,KAAD,EAAW;;AAEtB;AACA;AACD,WAJD;AAKD;;AAZK;AAAA,SAAN;IAcI,OAAO,GAAP,CAAW,UAAC,KAAD,EAAQ,KAAR,EAAiB;AAC1B,aACE,oBAAC,QAAD;AACE,aAAK,KADP;AAEE,eAAO,MAAM,IAFf;AAGE,qBAAa,MAAM;AAHrB,QADF;AAOD,KARD;AAdJ,GADF;AA2BD,CAhCD;;;AAmCA,IAAM,kBAAkB,SAAlB,eAAkB,QAA4B;AAAA,MAAb,MAAa,SAA1B,UAA0B,CAAb,MAAa;;AAClD,MAAI,OAAO,EAAE,MAAF,CAAS,OAAO,MAAhB,EAAwB,cAAxB,EAAwC,GAAxC,CAA4C,eAAO;AAC5D,WAAO,GAAP;AACD,GAFU,CAAX;AAGA,SAAO,EAAC,QAAQ,IAAT,EAAP;AACD,CALD;;AAOA,eAAe,QACb,eADa,EAEb;AACE,kCADF;AAEE;AAFF,CAFa,EAMb,UANa,CAAf","file":"/client/components/TrendsList.js.map","sourcesContent":["//\n// MODULE\n//\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport _ from 'lodash'\nimport {getTweetStream} from '../actions/api.js'\nimport {\n  setCurrentTrend,\n  resetTweets\n} from '../reducers/index'\n\n// MATERIAL UI\nimport Menu from 'material-ui/Menu'\nimport MenuItem from 'material-ui/MenuItem'\n\n//\n// COMPONENT\n//\n\nconst TrendsList = ({\n  trends,\n  setCurrentTrend, \n  resetTweets\n}) => {\n  return (\n    <Menu onChange={(event, trend) => {\n      const promise = new Promise(function (resolve, reject) {\n        resolve(\n          // UPDATE\n          setCurrentTrend(trend)\n        )\n      })\n      promise.then((trend) => {\n        // RESET TWEETS\n        resetTweets()\n        getTweetStream()\n      })\n    }}>\n      {\n        trends.map((trend, index) =>{\n          return (\n            <MenuItem\n              key={index}\n              value={trend.name}\n              primaryText={trend.name}\n            />\n          )  \n        })\n      }\n    </Menu>\n  )\n}\n\n// CONNECT & EXPORT\nconst mapStateToProps = ({appReducer: {trends}}) => {\n  let list = _.sortBy(trends.trends, 'tweet_volume').map(obj => {\n    return obj\n  })\n  return {trends: list}\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    setCurrentTrend, \n    resetTweets\n  }\n)(TrendsList) \n"]},"hash":"6217bf1d99e37dfb998aa8572e9b35bd31e612a7"}
