{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/ddp-server/session_view_tests.js","filenameRelative":"/packages/ddp-server/session_view_tests.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/ddp-server/session_view_tests.js.map","sourceFileName":"/packages/ddp-server/session_view_tests.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"session_view_tests"},"ignored":false,"code":"var newView = function newView(test) {\n  var results = [];\n  var view = new DDPServer._SessionCollectionView('test', {\n    added: function added(collection, id, fields) {\n      results.push({ fun: 'added', id: id, fields: fields });\n    },\n    changed: function changed(collection, id, _changed) {\n      if (_.isEmpty(_changed)) return;\n      results.push({ fun: 'changed', id: id, changed: _changed });\n    },\n    removed: function removed(collection, id) {\n      results.push({ fun: 'removed', id: id });\n    }\n  });\n  var v = {\n    view: view,\n    results: results\n  };\n  _.each([\"added\", \"changed\", \"removed\"], function (it) {\n    v[it] = _.bind(view[it], view);\n  });\n  v.expectResult = function (result) {\n    test.equal(results.shift(), result);\n  };\n  v.expectNoResult = function () {\n    test.equal(results, []);\n  };\n  v.drain = function () {\n    var ret = results;\n    results = [];\n    return ret;\n  };\n  return v;\n};\n\nTinytest.add('livedata - sessionview - exists reveal', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", {});\n  v.expectResult({ fun: 'added', id: \"A1\", fields: {} });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", {});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n\n  v.removed(\"B\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - added a second field in another sub', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { a: \"foo\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { a: \"foo\" } });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", { a: \"foo\", b: \"bar\" });\n  v.expectResult({ fun: 'changed', 'id': \"A1\", changed: { b: \"bar\" } });\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n\n  v.removed(\"B\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - field reveal', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", { foo: \"baz\" });\n  v.removed(\"A\", \"A1\");\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { foo: \"baz\" } });\n  v.expectNoResult();\n  // Somewhere in here we must have changed foo to baz. Legal either on the\n  // added or on the removed, but only once.\n\n  v.removed(\"B\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - field change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", { foo: \"baz\" }, []);\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { foo: \"baz\" } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - field clear', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", { foo: undefined });\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { foo: undefined } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - change makes a new field', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", { baz: \"quux\" });\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { baz: \"quux\" } });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - add, remove, add', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - field clear reveal', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", { foo: \"baz\" });\n  v.changed(\"A\", \"A1\", { foo: undefined });\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { foo: \"baz\" } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - change to canonical value produces no change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", { foo: \"baz\" });\n  var canon = \"bar\";\n  var maybeResults = v.drain();\n  if (!_.isEmpty(maybeResults)) {\n    // if something happened, it was a change message to baz.\n    // if nothing did, canon is still bar.\n    test.length(maybeResults, 1);\n    test.equal(maybeResults[0], { fun: 'changed', id: \"A1\", changed: { foo: \"baz\" } });\n    canon = \"baz\";\n  }\n  v.changed(\"B\", \"A1\", { foo: canon });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - new field of canonical value produces no change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", {});\n\n  v.changed(\"B\", \"A1\", { foo: \"bar\" });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - clear all clears only once', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", { foo: \"bar\" });\n  v.added(\"C\", \"A1\", { foo: \"bar\" });\n  v.changed(\"A\", \"A1\", { foo: undefined });\n  v.changed(\"B\", \"A1\", { foo: undefined });\n  v.changed(\"C\", \"A1\", { foo: undefined });\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { foo: undefined } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - change all changes only once', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", { foo: \"bar\" });\n  v.added(\"C\", \"A1\", { foo: \"bar\" });\n  v.changed(\"B\", \"A1\", { foo: \"baz\" });\n  v.changed(\"A\", \"A1\", { foo: \"baz\" });\n  v.changed(\"C\", \"A1\", { foo: \"baz\" });\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { foo: \"baz\" } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - multiple operations at once in a change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\", baz: \"quux\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\", baz: \"quux\" } });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", { foo: \"baz\" });\n  v.changed(\"A\", \"A1\", { thing: \"stuff\", foo: undefined, baz: undefined });\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { foo: \"baz\", thing: \"stuff\", baz: undefined } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { thing: undefined } });\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - more than one document', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\", baz: \"quux\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\", baz: \"quux\" } });\n  v.expectNoResult();\n\n  v.added(\"A\", \"A2\", { foo: \"baz\" });\n  v.expectResult({ fun: 'added', id: \"A2\", fields: { foo: \"baz\" } });\n  v.changed(\"A\", \"A1\", { thing: \"stuff\", foo: undefined, baz: undefined });\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { thing: \"stuff\", foo: undefined, baz: undefined } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n  v.removed(\"A\", \"A2\");\n  v.expectResult({ fun: 'removed', id: \"A2\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - multiple docs removed', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\", baz: \"quux\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\", baz: \"quux\" } });\n  v.expectNoResult();\n\n  v.added(\"A\", \"A2\", { foo: \"baz\" });\n  v.expectResult({ fun: 'added', id: \"A2\", fields: { foo: \"baz\" } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.removed(\"A\", \"A2\");\n  v.expectResult({ fun: 'removed', id: \"A2\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - complicated sequence', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\", baz: \"quux\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\", baz: \"quux\" } });\n  v.expectNoResult();\n\n  v.added(\"A\", \"A2\", { foo: \"eats\" });\n  v.expectResult({ fun: 'added', id: \"A2\", fields: { foo: \"eats\" } });\n\n  v.added(\"B\", \"A1\", { foo: \"baz\" });\n  v.changed(\"A\", \"A1\", { thing: \"stuff\", foo: undefined, baz: undefined });\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { foo: \"baz\", thing: \"stuff\", baz: undefined } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.removed(\"A\", \"A2\");\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { thing: undefined } });\n  v.expectResult({ fun: 'removed', id: \"A2\" });\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - added becomes changed', function (test) {\n  var v = newView(test);\n\n  v.added('A', \"A1\", { foo: 'bar' });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: 'bar' } });\n\n  v.added('B', \"A1\", { hi: 'there' });\n  v.expectResult({ fun: 'changed', id: 'A1', changed: { hi: 'there' } });\n\n  v.removed('A', 'A1');\n  v.expectResult({ fun: 'changed', id: 'A1', changed: { foo: undefined } });\n\n  v.removed('B', 'A1');\n  v.expectResult({ fun: 'removed', id: 'A1' });\n});\n\nTinytest.add('livedata - sessionview - weird key names', function (test) {\n  var v = newView(test);\n\n  v.added('A', \"A1\", {});\n  v.expectResult({ fun: 'added', id: \"A1\", fields: {} });\n\n  v.changed('A', \"A1\", { constructor: 'bla' });\n  v.expectResult({ fun: 'changed', id: 'A1', changed: { constructor: 'bla' } });\n});\n\nTinytest.add('livedata - sessionview - clear undefined value', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { field: \"value\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { field: \"value\" } });\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", { field: undefined });\n  v.expectResult({ fun: 'changed', id: 'A1', changed: { field: undefined } });\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", { field: undefined });\n  v.expectNoResult();\n});","ast":null,"map":{"version":3,"sources":["/packages/ddp-server/session_view_tests.js"],"names":[],"mappings":"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","file":"/packages/ddp-server/session_view_tests.js.map","sourcesContent":["var newView = function(test) {\n  var results = [];\n  var view = new DDPServer._SessionCollectionView('test', {\n    added: function (collection, id, fields) {\n      results.push({fun: 'added', id: id, fields: fields});\n    },\n    changed: function (collection, id, changed) {\n      if (_.isEmpty(changed))\n        return;\n      results.push({fun: 'changed', id: id, changed: changed});\n    },\n    removed: function (collection, id) {\n      results.push({fun: 'removed', id: id});\n    }\n  });\n  var v = {\n    view: view,\n    results: results\n  };\n  _.each([\"added\", \"changed\", \"removed\"], function (it) {\n    v[it] = _.bind(view[it], view);\n  });\n  v.expectResult = function (result) {\n    test.equal(results.shift(), result);\n  };\n  v.expectNoResult = function () {\n    test.equal(results, []);\n  };\n  v.drain = function() {\n    var ret = results;\n    results = [];\n    return ret;\n  };\n  return v;\n};\n\nTinytest.add('livedata - sessionview - exists reveal', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", {});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {}});\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", {});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - added a second field in another sub', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", {a: \"foo\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {a: \"foo\"}});\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", {a: \"foo\", b: \"bar\"});\n  v.expectResult({fun: 'changed', 'id': \"A1\", changed: {b: \"bar\"}});\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\n\nTinytest.add('livedata - sessionview - field reveal', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n  v.added(\"B\",  \"A1\", {foo: \"baz\"});\n  v.removed(\"A\", \"A1\");\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: \"baz\"}});\n  v.expectNoResult();\n  // Somewhere in here we must have changed foo to baz. Legal either on the\n  // added or on the removed, but only once.\n\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - field change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", {foo: \"baz\"}, []);\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: \"baz\"}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - field clear', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", {foo: undefined});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: undefined}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - change makes a new field', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", {baz:\"quux\"});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {baz: \"quux\"}});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - add, remove, add', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n});\n\nTinytest.add('livedata - sessionview - field clear reveal', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n\n  v.added(\"B\",  \"A1\", {foo: \"baz\"});\n  v.changed(\"A\", \"A1\", {foo: undefined});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: \"baz\"}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - change to canonical value produces no change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n\n  v.added(\"B\",  \"A1\", {foo: \"baz\"});\n  var canon = \"bar\";\n  var maybeResults = v.drain();\n  if (!_.isEmpty(maybeResults)) {\n    // if something happened, it was a change message to baz.\n    // if nothing did, canon is still bar.\n    test.length(maybeResults, 1);\n    test.equal(maybeResults[0], {fun: 'changed', id: \"A1\", changed: {foo: \"baz\"}});\n    canon = \"baz\";\n  }\n  v.changed(\"B\", \"A1\", {foo: canon});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - new field of canonical value produces no change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n\n  v.added(\"B\",  \"A1\", {});\n\n  v.changed(\"B\", \"A1\", {foo: \"bar\"});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - clear all clears only once', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n  v.added(\"B\",  \"A1\", {foo: \"bar\"});\n  v.added(\"C\",  \"A1\", {foo: \"bar\"});\n  v.changed(\"A\", \"A1\", {foo: undefined});\n  v.changed(\"B\", \"A1\", {foo: undefined});\n  v.changed(\"C\", \"A1\", {foo: undefined});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: undefined}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - change all changes only once', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n  v.added(\"B\",  \"A1\", {foo: \"bar\"});\n  v.added(\"C\",  \"A1\", {foo: \"bar\"});\n  v.changed(\"B\", \"A1\", {foo: \"baz\"});\n  v.changed(\"A\", \"A1\", {foo: \"baz\"});\n  v.changed(\"C\", \"A1\", {foo: \"baz\"});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: \"baz\"}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - multiple operations at once in a change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\", baz: \"quux\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\", baz: \"quux\"}});\n  v.expectNoResult();\n\n\n  v.added(\"B\",  \"A1\", {foo: \"baz\"});\n  v.changed(\"A\", \"A1\", {thing: \"stuff\", foo: undefined, baz: undefined});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: \"baz\", thing: \"stuff\", baz: undefined}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {thing: undefined}});\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - more than one document', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\", baz: \"quux\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\", baz: \"quux\"}});\n  v.expectNoResult();\n\n\n  v.added(\"A\", \"A2\", {foo: \"baz\"});\n  v.expectResult({fun: 'added', id: \"A2\", fields: {foo: \"baz\"}});\n  v.changed(\"A\", \"A1\", {thing: \"stuff\", foo: undefined, baz: undefined});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {thing: \"stuff\", foo: undefined, baz: undefined}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n  v.removed(\"A\", \"A2\");\n  v.expectResult({fun: 'removed', id: \"A2\"});\n  v.expectNoResult();\n\n});\n\nTinytest.add('livedata - sessionview - multiple docs removed', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\", baz: \"quux\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\", baz: \"quux\"}});\n  v.expectNoResult();\n\n\n  v.added(\"A\", \"A2\", {foo: \"baz\"});\n  v.expectResult({fun: 'added', id: \"A2\", fields: {foo: \"baz\"}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.removed(\"A\", \"A2\");\n  v.expectResult({fun: 'removed', id: \"A2\"});\n  v.expectNoResult();\n});\n\n\nTinytest.add('livedata - sessionview - complicated sequence', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\", baz: \"quux\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\", baz: \"quux\"}});\n  v.expectNoResult();\n\n  v.added(\"A\", \"A2\", {foo: \"eats\"});\n  v.expectResult({fun: 'added', id: \"A2\", fields: {foo: \"eats\"}});\n\n  v.added(\"B\",  \"A1\", {foo: \"baz\"});\n  v.changed(\"A\", \"A1\", {thing: \"stuff\", foo: undefined, baz: undefined});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: \"baz\", thing: \"stuff\", baz: undefined}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.removed(\"A\", \"A2\");\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {thing: undefined}});\n  v.expectResult({fun: 'removed', id: \"A2\"});\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - added becomes changed', function (test) {\n  var v = newView(test);\n\n  v.added('A',  \"A1\", {foo: 'bar'});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: 'bar'}});\n\n  v.added('B',  \"A1\", {hi: 'there'});\n  v.expectResult({fun: 'changed', id: 'A1', changed: {hi: 'there'}});\n\n  v.removed('A', 'A1');\n  v.expectResult({fun: 'changed', id: 'A1', changed: {foo: undefined}});\n\n  v.removed('B', 'A1');\n  v.expectResult({fun: 'removed', id: 'A1'});\n});\n\nTinytest.add('livedata - sessionview - weird key names', function (test) {\n  var v = newView(test);\n\n  v.added('A',  \"A1\", {});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {}});\n\n  v.changed('A',  \"A1\", {constructor: 'bla'});\n  v.expectResult({fun: 'changed', id: 'A1', changed: {constructor: 'bla'}});\n});\n\nTinytest.add('livedata - sessionview - clear undefined value', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", {field: \"value\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {field: \"value\"}});\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", {field: undefined});\n  v.expectResult({fun: 'changed', id: 'A1', changed: {field: undefined}});\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", {field: undefined});\n  v.expectNoResult();\n\n});\n"]},"hash":"862d4d37fd6f2df243910aca566a1cce1c4ef5cc"}
