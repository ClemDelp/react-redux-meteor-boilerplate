{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"../main.jsx","imported":["getStore"],"specifiers":[{"kind":"named","imported":"getStore","local":"getStore"}]}],"exports":{"exported":["fetchPlacesAvailable","fetchTrends","getTweetStream"],"specifiers":[{"kind":"local","local":"fetchPlacesAvailable","exported":"fetchPlacesAvailable"},{"kind":"local","local":"fetchTrends","exported":"fetchTrends"},{"kind":"local","local":"getTweetStream","exported":"getTweetStream"}]}}},"options":{"filename":"/client/actions/api.js","filenameRelative":"/client/actions/api.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/actions/api.js.map","sourceFileName":"/client/actions/api.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"api"},"ignored":false,"code":"module.export({fetchPlacesAvailable:function(){return fetchPlacesAvailable},fetchTrends:function(){return fetchTrends},getTweetStream:function(){return getTweetStream}});var getStore;module.import('../main.jsx',{\"getStore\":function(v){getStore=v}});// polyfills fetch on window object, if necessary\nrequire('whatwg-fetch');\n\n\nfunction fetchPlacesAvailable() {\n\tvar store = getStore();\n\treturn fetch('/trends/available').then(function (response) {\n\t\treturn response.json();\n\t}).then(function (json) {\n\t\tvar placesAvailable = JSON.parse(json.data);\n\t\t// SET GRAPH\n\t\tstore.dispatch({\n\t\t\ttype: 'SET_PLACES_AVAILABLE',\n\t\t\tplacesAvailable: placesAvailable\n\t\t});\n\t\treturn placesAvailable;\n\t})['catch'](function (ex) {\n\t\tconsole.log('get places available failed', ex);\n\t});\n}\n\nfunction fetchTrends() {\n\tvar store = getStore();\n\tvar woeid = store.getState().appReducer.currentPlaceWoeid;\n\treturn fetch('/trends', {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Accept': 'application/json',\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\twoeid: woeid\n\t\t})\n\t}).then(function (response) {\n\t\treturn response.json();\n\t}).then(function (json) {\n\t\tconsole.log(json);\n\t\tvar trends = JSON.parse(json.data);\n\t\t// SET TRENDS\n\t\tstore.dispatch({\n\t\t\ttype: 'SET_TRENDS',\n\t\t\ttrends: trends[0]\n\t\t});\n\t\treturn trends;\n\t})['catch'](function (ex) {\n\t\tconsole.log('get trends failed', ex);\n\t});\n}\n\nfunction getTweetStream() {\n\tvar store = getStore();\n\tvar trend = store.getState().appReducer.currentTrend;\n\treturn fetch('/tweets', {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Accept': 'application/json',\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\thastag: trend\n\t\t})\n\t});\n}","ast":null,"map":{"version":3,"sources":["/client/actions/api.js"],"names":[],"mappings":";AACA,QAAQ,cAAR;AACA,SAAS,QAAT,QAAyB,aAAzB;;AAEA,OAAO,SAAS,oBAAT,GAAiC;AACvC,KAAM,QAAQ,UAAd;AACA,QAAO,MAAM,mBAAN,EACN,IADM,CACD,UAAU,QAAV,EAAoB;AACzB,SAAO,SAAS,IAAT,EAAP;AACA,EAHM,EAGJ,IAHI,CAGC,UAAU,IAAV,EAAgB;AACvB,MAAM,kBAAkB,KAAK,KAAL,CAAW,KAAK,IAAhB,CAAxB;;AAEA,QAAM,QAAN,CAAe;AACb,SAAM,sBADO;AAEb,oBAAiB;AAFJ,GAAf;AAIA,SAAO,eAAP;AACA,EAXM,WAWE,UAAU,EAAV,EAAc;AACtB,UAAQ,GAAR,CAAY,6BAAZ,EAA2C,EAA3C;AACA,EAbM,CAAP;AAcA;;AAED,OAAO,SAAS,WAAT,GAAwB;AAC9B,KAAM,QAAQ,UAAd;AACA,KAAM,QAAQ,MAAM,QAAN,GAAiB,UAAjB,CAA4B,iBAA1C;AACA,QAAO,MAAM,SAAN,EAAiB;AACvB,UAAQ,MADe;AAEvB,WAAS;AACR,aAAU,kBADF;AAER,mBAAgB;AAFR,GAFc;AAMvB,QAAM,KAAK,SAAL,CAAe;AACpB,UAAO;AADa,GAAf;AANiB,EAAjB,EAUN,IAVM,CAUD,UAAU,QAAV,EAAoB;AACzB,SAAO,SAAS,IAAT,EAAP;AACA,EAZM,EAYJ,IAZI,CAYC,UAAU,IAAV,EAAgB;AACvB,UAAQ,GAAR,CAAY,IAAZ;AACA,MAAM,SAAS,KAAK,KAAL,CAAW,KAAK,IAAhB,CAAf;;AAEA,QAAM,QAAN,CAAe;AACb,SAAM,YADO;AAEb,WAAQ,OAAO,CAAP;AAFK,GAAf;AAIA,SAAO,MAAP;AACA,EArBM,WAqBE,UAAU,EAAV,EAAc;AACtB,UAAQ,GAAR,CAAY,mBAAZ,EAAiC,EAAjC;AACA,EAvBM,CAAP;AAwBA;;AAED,OAAO,SAAS,cAAT,GAA2B;AACjC,KAAM,QAAQ,UAAd;AACA,KAAM,QAAQ,MAAM,QAAN,GAAiB,UAAjB,CAA4B,YAA1C;AACA,QAAO,MAAM,SAAN,EAAiB;AACvB,UAAQ,MADe;AAEvB,WAAS;AACR,aAAU,kBADF;AAER,mBAAgB;AAFR,GAFc;AAMvB,QAAM,KAAK,SAAL,CAAe;AACpB,WAAQ;AADY,GAAf;AANiB,EAAjB,CAAP;AAUA","file":"/client/actions/api.js.map","sourcesContent":["// polyfills fetch on window object, if necessary\nrequire('whatwg-fetch')\nimport { getStore } from '../main.jsx'\n\nexport function fetchPlacesAvailable () {\n\tconst store = getStore()\n\treturn fetch('/trends/available')\n\t.then(function (response) {\n\t\treturn response.json()\n\t}).then(function (json) {\n\t\tconst placesAvailable = JSON.parse(json.data)\n\t\t// SET GRAPH\n\t\tstore.dispatch({\n\t\t  type: 'SET_PLACES_AVAILABLE',\n\t\t  placesAvailable: placesAvailable\n\t\t})\n\t\treturn placesAvailable\n\t}).catch(function (ex) {\n\t\tconsole.log('get places available failed', ex)\n\t})\n}\n\nexport function fetchTrends () {\n\tconst store = getStore()\n\tconst woeid = store.getState().appReducer.currentPlaceWoeid\n\treturn fetch('/trends', {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Accept': 'application/json',\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\twoeid: woeid\n\t\t})\n\t})\n\t.then(function (response) {\n\t\treturn response.json()\n\t}).then(function (json) {\n\t\tconsole.log(json)\n\t\tconst trends = JSON.parse(json.data)\n\t\t// SET TRENDS\n\t\tstore.dispatch({\n\t\t  type: 'SET_TRENDS',\n\t\t  trends: trends[0]\n\t\t})\n\t\treturn trends\n\t}).catch(function (ex) {\n\t\tconsole.log('get trends failed', ex)\n\t})\n}\n\nexport function getTweetStream () {\n\tconst store = getStore()\n\tconst trend = store.getState().appReducer.currentTrend\n\treturn fetch('/tweets', {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Accept': 'application/json',\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\thastag: trend\n\t\t})\n\t})\n}\n"]},"hash":"a854487efea89f137396203ea327c25c584596c2"}
