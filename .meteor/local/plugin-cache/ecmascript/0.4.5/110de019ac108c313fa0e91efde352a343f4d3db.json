{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"redux-saga/effects","imported":["call","fork","put","race","select","take"],"specifiers":[{"kind":"named","imported":"call","local":"call"},{"kind":"named","imported":"fork","local":"fork"},{"kind":"named","imported":"put","local":"put"},{"kind":"named","imported":"race","local":"race"},{"kind":"named","imported":"select","local":"select"},{"kind":"named","imported":"take","local":"take"}]},{"source":"redux-saga","imported":["takeEvery"],"specifiers":[{"kind":"named","imported":"takeEvery","local":"takeEvery"}]},{"source":"../reducers/demo","imported":["ADD_SCORE"],"specifiers":[{"kind":"named","imported":"ADD_SCORE","local":"ADD_SCORE"}]}],"exports":{"exported":["rootSaga"],"specifiers":[{"kind":"local","local":"rootSaga","exported":"default"}]}}},"options":{"filename":"/client/sagas/index.js","filenameRelative":"/client/sagas/index.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/sagas/index.js.map","sourceFileName":"/client/sagas/index.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"index"},"ignored":false,"code":"module.export({default:function(){return rootSaga}});var _regeneratorRuntime;module.import('babel-runtime/regenerator',{\"default\":function(v){_regeneratorRuntime=v}});var call,fork,put,race,select,take;module.import('redux-saga/effects',{\"call\":function(v){call=v},\"fork\":function(v){fork=v},\"put\":function(v){put=v},\"race\":function(v){race=v},\"select\":function(v){select=v},\"take\":function(v){take=v}});var takeEvery;module.import('redux-saga',{\"takeEvery\":function(v){takeEvery=v}});var ADD_SCORE;module.import('../reducers/demo',{\"ADD_SCORE\":function(v){ADD_SCORE=v}});\n\nvar _marked = [sayHelloSagas, watchScoreStream, rootSaga].map(_regeneratorRuntime.mark);\n\n\n\n\n\n\nfunction sayHelloSagas(action) {\n  return _regeneratorRuntime.wrap(function () {\n    function sayHelloSagas$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('say hello from sagas: ', action.y);\n\n          case 1:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }\n\n    return sayHelloSagas$;\n  }(), _marked[0], this);\n}\n\nfunction watchScoreStream() {\n  return _regeneratorRuntime.wrap(function () {\n    function watchScoreStream$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.delegateYield(takeEvery(ADD_SCORE, sayHelloSagas), 't0', 1);\n\n          case 1:\n          case 'end':\n            return _context2.stop();\n        }\n      }\n    }\n\n    return watchScoreStream$;\n  }(), _marked[1], this);\n}\n\nfunction rootSaga() {\n  return _regeneratorRuntime.wrap(function () {\n    function rootSaga$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return [fork(watchScoreStream)];\n\n          case 2:\n          case 'end':\n            return _context3.stop();\n        }\n      }\n    }\n\n    return rootSaga$;\n  }(), _marked[2], this);\n}","ast":null,"map":{"version":3,"sources":["/client/sagas/index.js"],"names":[],"mappings":";;eAOW,a,EAIA,gB,EAIe,Q;;AAf1B,SAAS,IAAT,EAAe,IAAf,EAAqB,GAArB,EAA0B,IAA1B,EAAgC,MAAhC,EAAwC,IAAxC,QAAoD,oBAApD;AACA,SAAS,SAAT,QAA0B,YAA1B;;AAEA,SACE,SADF,QAEO,kBAFP;;AAIA,SAAW,aAAX,CAA0B,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,oBAAQ,GAAR,CAAY,wBAAZ,EAAsC,OAAO,CAA7C;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAIA,SAAW,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACU,UAAU,SAAV,EAAqB,aAArB,CADV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAW,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACP,CACJ,KAAK,gBAAL,CADI,CADO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA","file":"/client/sagas/index.js.map","sourcesContent":["import { call, fork, put, race, select, take } from 'redux-saga/effects'\nimport { takeEvery } from 'redux-saga'\n\nimport {\n  ADD_SCORE\n} from '../reducers/demo'\n\nfunction * sayHelloSagas (action) {\n  console.log('say hello from sagas: ', action.y)\n}\n\nfunction * watchScoreStream () {\n  yield * takeEvery(ADD_SCORE, sayHelloSagas)\n}\n\nexport default function * rootSaga () {\n  yield [\n    fork(watchScoreStream)\n  ]\n}\n"]},"hash":"110de019ac108c313fa0e91efde352a343f4d3db"}
