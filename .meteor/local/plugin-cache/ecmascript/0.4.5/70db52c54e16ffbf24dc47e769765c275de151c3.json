{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"react-redux","imported":["connect"],"specifiers":[{"kind":"named","imported":"connect","local":"connect"}]},{"source":"../utils/emotionalConst","imported":["EMOTIONAL_COLOR"],"specifiers":[{"kind":"named","imported":"EMOTIONAL_COLOR","local":"EMOTIONAL_COLOR"}]},{"source":"../components/Icon","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Icon"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/containers/HelloStream.js","filenameRelative":"/client/containers/HelloStream.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/containers/HelloStream.js.map","sourceFileName":"/client/containers/HelloStream.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"HelloStream"},"ignored":false,"code":"var React;module.import('react',{\"default\":function(v){React=v}});var connect;module.import('react-redux',{\"connect\":function(v){connect=v}});var EMOTIONAL_COLOR;module.import('../utils/emotionalConst',{\"EMOTIONAL_COLOR\":function(v){EMOTIONAL_COLOR=v}});var Icon;module.import('../components/Icon',{\"default\":function(v){Icon=v}});//\n// IMPORTS\n//\n\n\n\n\n\n\n//\n// COMPONENT\n//\nvar HelloStream = function HelloStream(_ref) {\n  var emotionDistribution = _ref.emotionDistribution;\n\n  var emotionDistribRender = function emotionDistribRender() {\n    var emotions = Object.keys(emotionDistribution).filter(function (key) {\n      return Math.round(parseFloat(emotionDistribution[key] * 100));\n    });\n    var size = emotions.length - 1;\n    return emotions.map(function (key, index) {\n      var emotion = emotionDistribution[key];\n      var perc = Math.round(emotion * 100);\n      return React.createElement(\n        'span',\n        { key: index },\n        React.createElement(\n          'span',\n          { style: { color: String(EMOTIONAL_COLOR[key].donuts) } },\n          React.createElement(\n            'strong',\n            null,\n            perc,\n            '%'\n          )\n        ),\n        React.createElement(\n          'span',\n          { title: key },\n          React.createElement(Icon, {\n            className: 'icon results-module__viz-key-icon',\n            icon: 'emotion-' + key\n          }),\n          index === size ? '' : index === size - 1 ? ' and ' : ', '\n        )\n      );\n    });\n  };\n  return React.createElement(\n    'div',\n    null,\n    'I\\'m ',\n    ' ',\n    emotionDistribRender(),\n    React.createElement(\n      'div',\n      null,\n      'based on the emotional analysis of my messages'\n    )\n  );\n};\n\n//\n// CONNECT\n//\nfunction mapStateToProps(_ref2) {\n  var hellos = _ref2.data.hellos;\n\n  return { hello: hello };\n}\nmodule.export(\"default\",exports.default=(connect(mapStateToProps, null)(HelloStream)));","ast":null,"map":{"version":3,"sources":["/client/containers/HelloStream.js"],"names":[],"mappings":";;;AAGA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,OAAT,QAAwB,aAAxB;;AAEA,SACE,eADF,QAEO,yBAFP;AAGA,OAAO,IAAP,MAAiB,oBAAjB;;;;;AAKA,IAAM,cAAc,SAAd,WAAc,OAA2B;AAAA,MAAzB,mBAAyB,QAAzB,mBAAyB;;AAC7C,MAAM,uBAAuB,SAAvB,oBAAuB,GAAM;AACjC,QAAM,WAAW,OAAO,IAAP,CAAY,mBAAZ,EAAiC,MAAjC,CAAwC,UAAC,GAAD;AAAA,aAAS,KAAK,KAAL,CAAW,WAAW,oBAAoB,GAApB,IAA2B,GAAtC,CAAX,CAAT;AAAA,KAAxC,CAAjB;AACA,QAAM,OAAO,SAAS,MAAT,GAAkB,CAA/B;AACA,WAAO,SAAS,GAAT,CAAa,UAAC,GAAD,EAAM,KAAN,EAAgB;AAClC,UAAM,UAAU,oBAAoB,GAApB,CAAhB;AACA,UAAM,OAAO,KAAK,KAAL,CAAW,UAAU,GAArB,CAAb;AACA,aACE;AAAA;QAAA,EAAM,KAAK,KAAX;QACE;AAAA;UAAA,EAAM,OAAO,EAAC,OAAO,OAAO,gBAAgB,GAAhB,EAAqB,MAA5B,CAAR,EAAb;UACE;AAAA;YAAA;YAAS,IAAT;YAAA;AAAA;AADF,SADF;QAIE;AAAA;UAAA,EAAM,OAAO,GAAb;UACE,oBAAC,IAAD;AACE,uBAAU,mCADZ;AAEE,+BAAiB;AAFnB,YADF;UAMI,UAAU,IAAV,GACE,EADF,GAEE,UAAU,OAAO,CAAjB,GACE,OADF,GAEE;AAVR;AAJF,OADF;AAoBD,KAvBM,CAAP;AAwBD,GA3BD;AA4BA,SACE;AAAA;IAAA;IAAA;IACW,GADX;IAEG,sBAFH;IAGE;AAAA;MAAA;MAAA;AAAA;AAHF,GADF;AAOD,CApCD;;;;;AAyCA,SAAS,eAAT,QAA4C;AAAA,MAAV,MAAU,SAAjB,IAAiB,CAAV,MAAU;;AAC1C,SAAO,EAAC,YAAD,EAAP;AACD;AACD,eAAe,QAAQ,eAAR,EAAyB,IAAzB,EAA+B,WAA/B,CAAf","file":"/client/containers/HelloStream.js.map","sourcesContent":["//\n// IMPORTS\n//\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  EMOTIONAL_COLOR\n} from '../utils/emotionalConst'\nimport Icon from '../components/Icon'\n\n//\n// COMPONENT\n//\nconst HelloStream = ({emotionDistribution}) => {\n  const emotionDistribRender = () => {\n    const emotions = Object.keys(emotionDistribution).filter((key) => Math.round(parseFloat(emotionDistribution[key] * 100)))\n    const size = emotions.length - 1\n    return emotions.map((key, index) => {\n      const emotion = emotionDistribution[key]\n      const perc = Math.round(emotion * 100)\n      return (\n        <span key={index}>\n          <span style={{color: String(EMOTIONAL_COLOR[key].donuts)}}>\n            <strong>{perc}%</strong>\n          </span>\n          <span title={key}>\n            <Icon\n              className='icon results-module__viz-key-icon'\n              icon={`emotion-${key}`}\n            />\n            {\n              index === size\n              ? ''\n              : index === size - 1\n                ? ' and '\n                : ', '\n            }\n          </span>\n        </span>\n      )\n    })\n  }\n  return (\n    <div>\n      I&#39;m {' '}\n      {emotionDistribRender()}\n      <div>based on the emotional analysis of my messages</div>\n    </div>\n  )\n}\n\n//\n// CONNECT\n//\nfunction mapStateToProps ({data: {hellos}}) {\n  return {hello}\n}\nexport default connect(mapStateToProps, null)(HelloStream)\n"]},"hash":"70db52c54e16ffbf24dc47e769765c275de151c3"}
